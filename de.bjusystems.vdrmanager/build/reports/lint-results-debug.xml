<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.3.0">

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onActivityResult`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    protected void onActivityResult(int requestCode, int resultCode, Intent data) {"
        errorLine2="                   ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="740"
            column="20"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onNewIntent`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1=" protected void onNewIntent(final Intent intent) {"
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgSearchListActivity.java"
            line="63"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onBindDialogView`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1=" protected void onBindDialogView(View view) {"
        errorLine2="                ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/FetchEditTextPreference.java"
            line="83"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onActivityResult`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    protected void onActivityResult(int requestCode, int resultCode, Intent data) {"
        errorLine2="                   ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/VdrListActivity.java"
            line="209"
            column="20"/>
    </issue>

    <issue
        id="InconsistentArrays"
        severity="Warning"
        message="Array `navigation_array` has an inconsistent number of items (5 in `values-pl/strings.xml`, 6 in `values-de/strings.xml`)"
        category="Correctness"
        priority="7"
        summary="Inconsistencies in array element counts"
        explanation="When an array is translated in a different locale, it should normally have the same number of elements as the original array. When adding or removing elements to an array, it is easy to forget to update all the locales, and this lint warning finds inconsistencies like these.&#xA;&#xA;Note however that there may be cases where you really want to declare a different number of array items in each configuration (for example where the array represents available options, and those options differ for different layout orientations and so on), so use your own judgment to decide if this is really an error.&#xA;&#xA;You can suppress this error type if it finds false errors in your project."
        errorLine1="    &lt;string-array name=&quot;navigation_array&quot;>"
        errorLine2="    ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="412"
            column="5"
            message="Declaration with array size (6)"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="363"
            column="3"
            message="Declaration with array size (6)"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/strings.xml"
            line="364"
            column="3"
            message="Declaration with array size (6)"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="364"
            column="3"
            message="Declaration with array size (6)"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="361"
            column="3"
            message="Declaration with array size (5)"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="362"
            column="3"
            message="Declaration with array size (6)"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="        sharedPrefs.edit().putInt(key, value).commit();"
        errorLine2="                                              ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/Preferences.java"
            line="30"
            column="47"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="        sharedPrefs.edit().putBoolean(key, value).commit();"
        errorLine2="                                                  ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/Preferences.java"
            line="35"
            column="51"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="                        current != null ? current.getId() : -1).commit();"
        errorLine2="                                                                ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/Preferences.java"
            line="62"
            column="65"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="        editor.commit();"
        errorLine2="               ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/Preferences.java"
            line="437"
            column="16"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="                .commit();"
        errorLine2="                 ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="163"
            column="18"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="                .commit();"
        errorLine2="                 ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="177"
            column="18"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="            edit.commit();"
        errorLine2="                 ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="691"
            column="18"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="        edit.commit();"
        errorLine2="             ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="709"
            column="14"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="        edit.commit();"
        errorLine2="             ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="716"
            column="14"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="        edit.commit();"
        errorLine2="             ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="723"
            column="14"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="    highlight = arg0.toString().toLowerCase();"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="300"
            column="33"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="     if (event.getTitle().toLowerCase()"
        errorLine2="                          ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="308"
            column="27"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="       .indexOf(String.valueOf(arg0).toLowerCase()) != -1"
        errorLine2="                                     ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="309"
            column="38"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="         .toLowerCase()"
        errorLine2="          ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="311"
            column="11"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="         .indexOf(String.valueOf(arg0).toLowerCase()) != -1) {"
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="312"
            column="40"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="    String q = String.valueOf(arg0).toLowerCase();"
        errorLine2="                                    ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="195"
            column="37"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="     groupFilter = String.valueOf(arg0).toLowerCase();"
        errorLine2="                                        ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="199"
            column="41"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="      String g = str.toLowerCase();"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="201"
            column="22"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="     groupFilter = String.valueOf(arg0).toLowerCase();"
        errorLine2="                                        ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="210"
            column="41"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="      String g = pr.toLowerCase();"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="214"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="     sourceFilter = String.valueOf(arg0).toLowerCase();"
        errorLine2="                                         ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="222"
            column="42"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="      String g = pr.toLowerCase();"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="226"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="     channelFilter = String.valueOf(arg0).toLowerCase();"
        errorLine2="                                          ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="233"
            column="43"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="      String tmp = cname.toLowerCase();"
        errorLine2="                         ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="237"
            column="26"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="   return String.format(&quot;%d&quot;, cal.getTimeInMillis() / 1000);"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/EpgSearchTimeValue.java"
            line="48"
            column="11"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="  final EpgSearchTimeValue time = new EpgSearchTimeValue(values.size(), String.format(&quot;%02d:%02d&quot;, hourOfDay, minute));"
        errorLine2="                                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgSearchTimesListActivity.java"
            line="85"
            column="73"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="        return String.format(&quot;LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]&quot;,"
        errorLine2="               ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/androvdr/widget/LruCache.java"
            line="393"
            column="16"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                if (cs.toString().toUpperCase().contains(str.toUpperCase())) {"
        errorLine2="                                  ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/com/rajasharan/widget/RecyclerDropdown.java"
            line="70"
            column="35"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                if (cs.toString().toUpperCase().contains(str.toUpperCase())) {"
        errorLine2="                                                             ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/com/rajasharan/widget/RecyclerDropdown.java"
            line="70"
            column="62"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="  final String tm = String.format(&quot;%02d:%02d&quot;, hourOfDay, minute);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/TimeEpgListActivity.java"
            line="145"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="            .append(String.format(&quot;%04d-%02d-%02d:&quot;, cal.get(Calendar.YEAR), cal.get(Calendar.MONTH) + 1, cal.get(Calendar.DAY_OF_MONTH)))"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/Timer.java"
            line="206"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="            .append(String.format(&quot;%02d%02d:&quot;, cal.get(Calendar.HOUR_OF_DAY), cal.get(Calendar.MINUTE)));"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/Timer.java"
            line="207"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="        line.append(String.format(&quot;%02d%02d:&quot;, cal.get(Calendar.HOUR_OF_DAY), cal.get(Calendar.MINUTE)))"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/Timer.java"
            line="210"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="        final String str = where.toLowerCase();"
        errorLine2="                                 ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/Utils.java"
            line="85"
            column="34"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="        what = what.toLowerCase();"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/Utils.java"
            line="86"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="        final String str = where.toLowerCase();"
        errorLine2="                                 ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/Utils.java"
            line="110"
            column="34"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="        what = what.toLowerCase();"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/Utils.java"
            line="111"
            column="21"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle&quot; in drawable-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-finger/btn_circle.xml"
            line="17"
            column="2"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_disable&quot; in drawable-hdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_disable.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_disable&quot; in drawable-hdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_disable.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_disable&quot; in drawable-mdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi-finger/btn_circle_disable.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_disable&quot; in drawable-mdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi-finger/btn_circle_disable.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_disable_focused&quot; in drawable-hdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_disable_focused.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_disable_focused&quot; in drawable-hdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_disable_focused.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_disable_focused&quot; in drawable-mdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi-finger/btn_circle_disable_focused.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_disable_focused&quot; in drawable-mdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi-finger/btn_circle_disable_focused.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_normal&quot; in drawable-hdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_normal.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_normal&quot; in drawable-hdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_normal.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_normal&quot; in drawable-mdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi-finger/btn_circle_normal.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_normal&quot; in drawable-mdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi-finger/btn_circle_normal.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_pressed&quot; in drawable-hdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_pressed.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_pressed&quot; in drawable-hdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_pressed.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_pressed&quot; in drawable-mdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi-finger/btn_circle_pressed.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_pressed&quot; in drawable-mdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi-finger/btn_circle_pressed.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_selected&quot; in drawable-hdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_selected.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_selected&quot; in drawable-hdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_selected.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_selected&quot; in drawable-mdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi-finger/btn_circle_selected.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The drawable &quot;btn_circle_selected&quot; in drawable-mdpi-finger has no declaration in the base `drawable` folder or in a `drawable-`*density*`dpi` folder; this can lead to crashes when the drawable is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi-finger/btn_circle_selected.png"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The layout &quot;remote_test&quot; in layout-land has no declaration in the base `layout` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the `android.os.Build.VERSION_CODES` javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: https://developer.android.com/reference/android/os/Build.VERSION_CODES.html as well as follow this guide:&#xA;https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        url="https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        urls="https://developer.android.com/distribute/best-practices/develop/target-sdk.html,https://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        android:targetSdkVersion=&quot;34&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/AndroidManifest.xml"
            line="19"
            column="9"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the `android.os.Build.VERSION_CODES` javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: https://developer.android.com/reference/android/os/Build.VERSION_CODES.html as well as follow this guide:&#xA;https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        url="https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        urls="https://developer.android.com/distribute/best-practices/develop/target-sdk.html,https://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdk 34  // ❌ nicht &quot;setTargetSdk&quot;, sondern &quot;targetSdk&quot;"
        errorLine2="        ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/build.gradle"
            line="12"
            column="9"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Warning"
        message="Do not hardcode &quot;`/data/`&quot;; use `Context.getFilesDir().getPath()` instead"
        category="Correctness"
        priority="6"
        summary="Hardcoded reference to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.&#xA;&#xA;Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`."
        url="https://developer.android.com/training/data-storage#filesExternal"
        urls="https://developer.android.com/training/data-storage#filesExternal"
        errorLine1="  return &quot;/data/data/de.bjusystems.vdrmanager.ng/databases/&quot; + DATABASE_NAME;"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/db/DBAccess.java"
            line="42"
            column="10"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        severity="Warning"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        category="Correctness"
        priority="6"
        summary="Implied locale in date format"
        explanation="Almost all callers should use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()` to get a ready-made instance of SimpleDateFormat suitable for the user&apos;s locale. The main reason you&apos;d create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).&#xA;&#xA;Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing."
        url="https://developer.android.com/reference/java/text/SimpleDateFormat.html"
        urls="https://developer.android.com/reference/java/text/SimpleDateFormat.html"
        errorLine1="  SimpleDateFormat sdf = new SimpleDateFormat(Preferences.get().getTimeFormat());"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/date/DateFormatter.java"
            line="23"
            column="26"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        severity="Warning"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        category="Correctness"
        priority="6"
        summary="Implied locale in date format"
        explanation="Almost all callers should use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()` to get a ready-made instance of SimpleDateFormat suitable for the user&apos;s locale. The main reason you&apos;d create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).&#xA;&#xA;Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing."
        url="https://developer.android.com/reference/java/text/SimpleDateFormat.html"
        urls="https://developer.android.com/reference/java/text/SimpleDateFormat.html"
        errorLine1="  sdf = new SimpleDateFormat(&quot;EEE dd.MM.yy&quot;);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/date/DateFormatter.java"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        severity="Warning"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        category="Correctness"
        priority="6"
        summary="Implied locale in date format"
        explanation="Almost all callers should use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()` to get a ready-made instance of SimpleDateFormat suitable for the user&apos;s locale. The main reason you&apos;d create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).&#xA;&#xA;Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing."
        url="https://developer.android.com/reference/java/text/SimpleDateFormat.html"
        urls="https://developer.android.com/reference/java/text/SimpleDateFormat.html"
        errorLine1=" private static final SimpleDateFormat BACKUP_FILENAME_FORMAT = new SimpleDateFormat("
        errorLine2="                                                                ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/ExternalFileBackup.java"
            line="49"
            column="65"/>
    </issue>

    <issue
        id="SuspiciousIndentation"
        severity="Warning"
        message="The indentation string here is different from on the previous line (`&quot; &quot;` vs `\t`)"
        category="Correctness"
        priority="6"
        summary="Suspicious indentation"
        explanation="This check looks for cases where the indentation suggests a grouping that isn&apos;t actually there in the code. A common example of this would be something like&#xA;```kotlin&#xA;if (column > width)&#xA;    line++&#xA;    column = 0&#xA;```&#xA;Here, the `column = 0` line will be executed every single time, not just if the condition is true."
        errorLine1="  mTransparencyBar.setProgressDrawable(new TextSeekBarDrawable(mContext.getResources(), mContext.getString(R.string.pref_dialog_color_picker_alpha), true));"
        errorLine2="~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerDialog.java"
            line="304"
            column="1"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerDialog.java"
            line="303"
            column="1"
            message="Previous line indentation here"/>
    </issue>

    <issue
        id="SuspiciousIndentation"
        severity="Warning"
        message="The indentation string here is different from on the previous line (`&quot; &quot;` vs `\t`)"
        category="Correctness"
        priority="6"
        summary="Suspicious indentation"
        explanation="This check looks for cases where the indentation suggests a grouping that isn&apos;t actually there in the code. A common example of this would be something like&#xA;```kotlin&#xA;if (column > width)&#xA;    line++&#xA;    column = 0&#xA;```&#xA;Here, the `column = 0` line will be executed every single time, not just if the condition is true."
        errorLine1="  updateChildPreferences();"
        errorLine2=" ~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/PreferencesActivity.java"
            line="55"
            column="2"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/PreferencesActivity.java"
            line="45"
            column="2"
            message="Previous line indentation here"/>
    </issue>

    <issue
        id="SuspiciousIndentation"
        severity="Warning"
        message="The indentation string here is different from on the previous line (`&quot; &quot;` vs `\t`)"
        category="Correctness"
        priority="6"
        summary="Suspicious indentation"
        explanation="This check looks for cases where the indentation suggests a grouping that isn&apos;t actually there in the code. A common example of this would be something like&#xA;```kotlin&#xA;if (column > width)&#xA;    line++&#xA;    column = 0&#xA;```&#xA;Here, the `column = 0` line will be executed every single time, not just if the condition is true."
        errorLine1="   socket.close();"
        errorLine2="~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/svdrp/SvdrpClient.java"
            line="360"
            column="1"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/svdrp/SvdrpClient.java"
            line="359"
            column="1"
            message="Previous line indentation here"/>
    </issue>

    <issue
        id="AppBundleLocaleChanges"
        severity="Warning"
        message="Found dynamic locale changes, but did not find corresponding Play Core library calls for downloading languages and splitting by language is not disabled in the `bundle` configuration"
        category="Correctness"
        priority="5"
        summary="App Bundle handling of runtime locale changes"
        explanation="When changing locales at runtime (e.g. to provide an in-app language switcher), the Android App Bundle must be configured to not split by locale or the Play Core library must be used to download additional locales at runtime."
        url="https://developer.android.com/guide/app-bundle/configure-base#handling_language_changes"
        urls="https://developer.android.com/guide/app-bundle/configure-base#handling_language_changes"
        errorLine1="        config.locale = locale;"
        errorLine2="               ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/data/Preferences.java"
            line="796"
            column="16"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="    convertView = inflater.inflate(R.layout.header_item, null);"
        errorLine2="                                                         ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="120"
            column="58"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="   view = inflater.inflate(R.layout.child_layout, null);"
        errorLine2="                                                  ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="83"
            column="51"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="   view = inflater.inflate(R.layout.group_layout, null);"
        errorLine2="                                                  ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelAdapter.java"
            line="152"
            column="51"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="            View view = getLayoutInflater().inflate(R.layout.epg_detail, null);"
        errorLine2="                                                                         ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="158"
            column="74"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="        View rootView = inflater.inflate(R.layout.searchable_list_dialog, null);"
        errorLine2="                                                                          ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/FaListDialog.java"
            line="44"
            column="75"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="   convertView = inflater.inflate(R.layout.folder_item, null);"
        errorLine2="                                                        ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/RecordingAdapter.java"
            line="87"
            column="57"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="        View view = getLayoutInflater().inflate(R.layout.remote, null);"
        errorLine2="                                                                 ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="100"
            column="66"/>
    </issue>

    <issue
        id="RedundantLabel"
        severity="Warning"
        message="Redundant label can be removed"
        category="Correctness"
        priority="5"
        summary="Redundant label on activity"
        explanation="When an activity does not have a label attribute, it will use the one from the application tag. Since the application has already specified the same label, the label on this activity can be omitted."
        errorLine1="            android:label=&quot;@string/app_name&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/AndroidManifest.xml"
            line="34"
            column="13"/>
    </issue>

    <issue
        id="AppCompatCustomView"
        severity="Error"
        message="This custom view should extend `androidx.appcompat.widget.AppCompatTextView` instead"
        category="Correctness"
        priority="4"
        summary="Appcompat Custom Widgets"
        explanation="In order to support features such as tinting, the appcompat library will automatically load special appcompat replacements for the builtin widgets. However, this does not work for your own custom views.&#xA;&#xA;Instead of extending the `android.widget` classes directly, you should instead extend one of the delegate classes in `androidx.appcompat.widget.AppCompatTextView`."
        errorLine1="public class AnimatedTextView  extends TextView {"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/androvdr/widget/AnimatedTextView.java"
            line="14"
            column="40"/>
    </issue>

    <issue
        id="AppCompatCustomView"
        severity="Error"
        message="This custom view should extend `androidx.appcompat.widget.AppCompatTextView` instead"
        category="Correctness"
        priority="4"
        summary="Appcompat Custom Widgets"
        explanation="In order to support features such as tinting, the appcompat library will automatically load special appcompat replacements for the builtin widgets. However, this does not work for your own custom views.&#xA;&#xA;Instead of extending the `android.widget` classes directly, you should instead extend one of the delegate classes in `androidx.appcompat.widget.AppCompatTextView`."
        errorLine1="public class FontAwesomeTextView extends TextView {"
        errorLine2="                                         ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/androvdr/widget/FontAwesomeTextView.java"
            line="14"
            column="42"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.core:core-ktx than 1.10.1 is available: 1.16.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.core:core-ktx:1.10.1&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/build.gradle"
            line="94"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.appcompat:appcompat:1.6.1&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/build.gradle"
            line="95"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.activity:activity-ktx than 1.7.2 is available: 1.10.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.activity:activity-ktx:1.7.2&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/build.gradle"
            line="97"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.annotation:annotation than 1.7.1 is available: 1.9.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.annotation:annotation:1.7.1&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/build.gradle"
            line="98"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.fragment:fragment than 1.6.2 is available: 1.8.8"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.fragment:fragment:1.6.2&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/build.gradle"
            line="99"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.viewpager:viewpager than 1.0.0 is available: 1.1.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.viewpager:viewpager:1.0.0&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/build.gradle"
            line="100"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.recyclerview:recyclerview than 1.3.2 is available: 1.4.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.recyclerview:recyclerview:1.3.2&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/build.gradle"
            line="104"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.google.android.material:material than 1.9.0 is available: 1.12.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.google.android.material:material:1.9.0&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/build.gradle"
            line="122"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of org.jetbrains.kotlin:kotlin-stdlib than 1.9.22 is available: 2.1.20"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;org.jetbrains.kotlin:kotlin-stdlib:1.9.22&apos;  // ← nur das, kein jdk8!"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/build.gradle"
            line="125"
            column="20"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `minSdkVersion` value (`24`) is not used; it is always overridden by the value specified in the Gradle build script (`24`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="        android:minSdkVersion=&quot;24&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/AndroidManifest.xml"
            line="18"
            column="9"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `targetSdkVersion` value (`34`) is not used; it is always overridden by the value specified in the Gradle build script (`34`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="        android:targetSdkVersion=&quot;34&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/AndroidManifest.xml"
            line="19"
            column="9"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;18dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="83"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;18dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="95"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                android:textSize=&quot;18dip&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list_fragment.xml"
            line="54"
            column="17"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                android:textSize=&quot;18dip&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list_fragment.xml"
            line="66"
            column="17"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                android:textSize=&quot;16dip&quot; >"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="105"
            column="17"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="   android:ellipsize=&quot;end&quot; android:layout_width=&quot;wrap_content&quot; android:gravity=&quot;right&quot;  android:textSize=&quot;13dip&quot;"
        errorLine2="                                                                                        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="55"
            column="89"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="   android:textSize=&quot;12dip&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="64"
            column="4"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;18dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="97"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;18dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="109"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;18dip&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/no_connection.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;18dip&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/no_connection.xml"
            line="30"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="    android:textSize=&quot;18dip&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/search_epg_list.xml"
            line="35"
            column="5"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="    android:textSize=&quot;18dip&quot; android:layout_height=&quot;wrap_content&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/search_epg_list.xml"
            line="39"
            column="5"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;18dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="96"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;18dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="108"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;18dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_list.xml"
            line="45"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="https://developer.android.com/training/multiscreen/screendensities.html"
        urls="https://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;18dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_list.xml"
            line="57"
            column="21"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:editable` is deprecated: Use `inputType` instead"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="           android:editable=&quot;false&quot;/>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:editable` is deprecated: Use `inputType` instead"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="              android:editable=&quot;false&quot;/>"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="60"
            column="15"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:editable` is deprecated: Use `inputType` instead"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="                   android:editable=&quot;false&quot;/>          "
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="66"
            column="20"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:editable` is deprecated: Use `inputType` instead"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="            android:editable=&quot;false&quot;/>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="80"
            column="13"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:editable` is deprecated: Use an `&lt;EditText>` to make it editable"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="                   android:editable=&quot;false&quot;/>        "
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="57"
            column="20"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:editable` is deprecated: Use an `&lt;EditText>` to make it editable"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="                   android:editable=&quot;false&quot;/>        "
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="72"
            column="20"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:editable` is deprecated: Use an `&lt;EditText>` to make it editable"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="              android:editable=&quot;false&quot;/>"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="94"
            column="15"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:editable` is deprecated: Use an `&lt;EditText>` to make it editable"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="            android:editable=&quot;false&quot;/>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="107"
            column="13"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:numeric` is deprecated: Use `inputType` instead"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="      &lt;EditText android:layout_height=&quot;wrap_content&quot; android:numeric=&quot;integer&quot; android:id=&quot;@+id/timer_detail_priority&quot;  android:layout_width=&quot;wrap_content&quot; android:hint=&quot;@string/timer_detail_priority&quot;/>"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="125"
            column="54"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:numeric` is deprecated: Use `inputType` instead"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="      &lt;EditText android:layout_height=&quot;wrap_content&quot;  android:numeric=&quot;integer&quot; android:id=&quot;@+id/timer_detail_lifetime&quot;  android:layout_width=&quot;wrap_content&quot; android:hint=&quot;@string/timer_detail_lifetime_hint&quot;/>"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="134"
            column="55"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:password` is deprecated: Use `inputType` instead"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="            android:password=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/xml/vdr_prefs.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:password` is deprecated: Use `inputType` instead"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="            android:password=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/xml/vdr_prefs.xml"
            line="88"
            column="13"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="`android:password` is deprecated: Use `inputType` instead"
        category="Correctness"
        priority="2"
        summary="Using deprecated resources"
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="            android:password=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/xml/vdr_prefs.xml"
            line="136"
            column="13"/>
    </issue>

    <issue
        id="UseCompatLoadingForDrawables"
        severity="Warning"
        message="Use `ResourcesCompat.getDrawable()`"
        category="Correctness"
        priority="1"
        summary="Should not call `Context.getDrawable` or `Resources.getDrawable` directly"
        explanation="Use Compat loading of drawables"
        errorLine1="   mProgress = res.getDrawable(android.R.drawable.progress_horizontal);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerDialog.java"
            line="380"
            column="16"/>
    </issue>

    <issue
        id="UseCompatLoadingForDrawables"
        severity="Warning"
        message="Use `ResourcesCompat.getDrawable()`"
        category="Correctness"
        priority="1"
        summary="Should not call `Context.getDrawable` or `Resources.getDrawable` directly"
        explanation="Use Compat loading of drawables"
        errorLine1="   mProgress = res.getDrawable(android.R.drawable.progress_horizontal);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerPreference.java"
            line="391"
            column="16"/>
    </issue>

    <issue
        id="UseCompatTextViewDrawableXml"
        severity="Warning"
        message="Use `app:drawableLeftCompat` instead of `android:drawableLeft`"
        category="Correctness"
        priority="1"
        summary="Compat compound drawable attributes should be used on `TextView`"
        explanation="`TextView` uses `android:` compound drawable attributes instead of `app:` ones"
        errorLine1="                android:drawableLeft=&quot;@drawable/ic_drive&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_list.xml"
            line="66"
            column="17"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `epg_duration_template`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="     R.string.epg_duration_template, dura));"
        errorLine2="                                     ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="235"
            column="38"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="79"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `epg_duration_template`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="     R.string.epg_duration_template, dura));"
        errorLine2="                                     ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="235"
            column="38"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="82"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `epg_duration_template_live`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="     R.string.epg_duration_template_live, rest, dura));"
        errorLine2="                                          ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="246"
            column="43"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="80"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `epg_duration_template_live`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="     R.string.epg_duration_template_live, rest, dura));"
        errorLine2="                                          ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="246"
            column="43"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="83"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_duration_template_live`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="     R.string.epg_duration_template_live, rest, dura));"
        errorLine2="                                                ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="246"
            column="49"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="80"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_duration_template_live`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="     R.string.epg_duration_template_live, rest, dura));"
        errorLine2="                                                ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventAdapter.java"
            line="246"
            column="49"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="83"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_window_title_count`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    getCACHE().size()));"
        errorLine2="    ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventListActivity.java"
            line="433"
            column="5"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="89"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_window_title_count`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    getCACHE().size()));"
        errorLine2="    ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventListActivity.java"
            line="433"
            column="5"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/strings.xml"
            line="92"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_window_title_count`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    getCACHE().size()));"
        errorLine2="    ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventListActivity.java"
            line="433"
            column="5"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="92"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_window_title_count`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    getCACHE().size()));"
        errorLine2="    ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventListActivity.java"
            line="433"
            column="5"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="90"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_window_title_count`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    getCACHE().size()));"
        errorLine2="    ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventListActivity.java"
            line="433"
            column="5"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="92"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_window_title_count`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    getCACHE().size()));"
        errorLine2="    ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventListActivity.java"
            line="433"
            column="5"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="96"
            column="5"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Wrong argument count, format string `groupby_window_title_templte` requires `0` but format call supplies `1`"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="     .append(getString(R.string.groupby_window_title_templte,"
        errorLine2="             ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="584"
            column="14"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="25"
            column="3"
            message="This definition requires 0 arguments"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Wrong argument count, format string `groupby_window_title_templte` requires `0` but format call supplies `1`"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="     .append(getString(R.string.groupby_window_title_templte,"
        errorLine2="             ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="590"
            column="14"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="25"
            column="3"
            message="This definition requires 0 arguments"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Wrong argument count, format string `groupby_window_title_templte` requires `0` but format call supplies `1`"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="     .append(getString(R.string.groupby_window_title_templte,"
        errorLine2="             ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="597"
            column="14"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="25"
            column="3"
            message="This definition requires 0 arguments"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `channels_window_title_count`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    resolveWindowTitle(), adapter.groups.size(), ChannelClient"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="608"
            column="27"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="90"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `channels_window_title_count`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    resolveWindowTitle(), adapter.groups.size(), ChannelClient"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="608"
            column="27"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/strings.xml"
            line="93"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `channels_window_title_count`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    resolveWindowTitle(), adapter.groups.size(), ChannelClient"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="608"
            column="27"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="91"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #3 in `channels_window_title_count`: conversion is `s`, received `int` (argument #4 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    resolveWindowTitle(), adapter.groups.size(), ChannelClient"
        errorLine2="                                                 ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="608"
            column="50"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="90"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #3 in `channels_window_title_count`: conversion is `s`, received `int` (argument #4 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    resolveWindowTitle(), adapter.groups.size(), ChannelClient"
        errorLine2="                                                 ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="608"
            column="50"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/strings.xml"
            line="93"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #3 in `channels_window_title_count`: conversion is `s`, received `int` (argument #4 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="    resolveWindowTitle(), adapter.groups.size(), ChannelClient"
        errorLine2="                                                 ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="608"
            column="50"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="91"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `epg_duration_template_live`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="            dura.setText(getString(R.string.epg_duration_template_live, rest,"
        errorLine2="                                                                        ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="394"
            column="73"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="80"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `epg_duration_template_live`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="            dura.setText(getString(R.string.epg_duration_template_live, rest,"
        errorLine2="                                                                        ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="394"
            column="73"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="83"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_duration_template_live`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                    dm));"
        errorLine2="                    ~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="395"
            column="21"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="80"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_duration_template_live`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                    dm));"
        errorLine2="                    ~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="395"
            column="21"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="83"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `epg_duration_template`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="            dura.setText(getString(R.string.epg_duration_template, dm));"
        errorLine2="                                                                   ~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="397"
            column="68"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="79"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `epg_duration_template`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="            dura.setText(getString(R.string.epg_duration_template, dm));"
        errorLine2="                                                                   ~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="397"
            column="68"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="82"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_of_a_channel`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="        setTitle(getString(R.string.epg_of_a_channel, cn, position + 1,"
        errorLine2="                                                          ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="789"
            column="59"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="81"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `epg_of_a_channel`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="        setTitle(getString(R.string.epg_of_a_channel, cn, position + 1,"
        errorLine2="                                                          ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="789"
            column="59"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="82"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #3 in `epg_of_a_channel`: conversion is `s`, received `int` (argument #4 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                epgs.size()));"
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="790"
            column="17"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="81"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #3 in `epg_of_a_channel`: conversion is `s`, received `int` (argument #4 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                epgs.size()));"
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="790"
            column="17"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="82"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `drive_info`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="       (freeMB) / 1024, totalMB / 1024, 100 - percent));"
        errorLine2="       ~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/RecordingListActivity.java"
            line="556"
            column="8"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="479"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `drive_info`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="       (freeMB) / 1024, totalMB / 1024, 100 - percent));"
        errorLine2="       ~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/RecordingListActivity.java"
            line="556"
            column="8"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/strings.xml"
            line="479"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `drive_info`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="       (freeMB) / 1024, totalMB / 1024, 100 - percent));"
        errorLine2="       ~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/RecordingListActivity.java"
            line="556"
            column="8"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="475"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `drive_info`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="       (freeMB) / 1024, totalMB / 1024, 100 - percent));"
        errorLine2="                        ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/RecordingListActivity.java"
            line="556"
            column="25"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="479"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `drive_info`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="       (freeMB) / 1024, totalMB / 1024, 100 - percent));"
        errorLine2="                        ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/RecordingListActivity.java"
            line="556"
            column="25"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/strings.xml"
            line="479"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `drive_info`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="       (freeMB) / 1024, totalMB / 1024, 100 - percent));"
        errorLine2="                        ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/RecordingListActivity.java"
            line="556"
            column="25"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="475"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #3 in `drive_info`: conversion is `s`, received `int` (argument #4 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="       (freeMB) / 1024, totalMB / 1024, 100 - percent));"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/RecordingListActivity.java"
            line="556"
            column="41"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="479"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #3 in `drive_info`: conversion is `s`, received `int` (argument #4 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="       (freeMB) / 1024, totalMB / 1024, 100 - percent));"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/RecordingListActivity.java"
            line="556"
            column="41"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/strings.xml"
            line="479"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #3 in `drive_info`: conversion is `s`, received `int` (argument #4 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="       (freeMB) / 1024, totalMB / 1024, 100 - percent));"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/RecordingListActivity.java"
            line="556"
            column="41"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="475"
            column="3"
            message="Conflicting argument declaration here"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;generic_progress_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;generic_progress_title&quot; translation_description=&quot;The title on a progress dialog asking the user to wait.&quot;>    Please wait...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="4"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;generic_confirm_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;generic_confirm_title&quot; translation_description=&quot;The title on a confirmation dialog asking the user if he is sure?&quot;>    Are you sure?&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="5"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;sd_card_canceled&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sd_card_canceled&quot; translation_description=&quot;When importing/saving to the SD card, the message indicating that the"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;sd_card_error_no_storage&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sd_card_error_no_storage&quot; translation_description=&quot;When importing/saving to the SD card, the error message indicating that"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="10"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;sd_card_import_error&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sd_card_import_error&quot; translation_description=&quot;When importing from the SD card, the error message indicating not able"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="12"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;sd_card_import_error_no_file&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sd_card_import_error_no_file&quot; translation_description=&quot;When importing from the SD card, the error message indicating that no"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="14"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;sd_card_import_progress_message&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sd_card_import_progress_message&quot; translation_description=&quot;When importing from the SD card, the progress message.&quot;>    Importing from SD card...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;sd_card_import_success&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sd_card_import_success&quot; translation_description=&quot;When importing from the SD card, the success message.&quot;>    Finished importing from SD card.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="19"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;sd_card_save_error&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sd_card_save_error&quot; translation_description=&quot;When saving to the SD card, the error message indicating not able to"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="20"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;sd_card_save_error_create_dir&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sd_card_save_error_create_dir&quot; translation_description=&quot;When saving to the SD card, the error message indicating not able to"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;sd_card_save_progress_message&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sd_card_save_progress_message&quot; translation_description=&quot;When saving to the SD card, the progress message.&quot;>    Saving to SD card...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="24"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;sd_card_save_success&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;sd_card_save_success&quot; translation_description=&quot;When saving to the SD card, the success message&quot;>    Finished saving to SD card.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="25"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_summary&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_summary&quot;>Backup/Restore your data and settings&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_now&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_now&quot; translation_description=&quot;In the &amp;apos;Backup&amp;apos; settings, under the &amp;apos;SD card&amp;apos; section, the"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_now_summary&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_now_summary&quot;>Creates a snapshot of the current data and the settings&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="33"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_now_progress_message&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_now_progress_message&quot; translation_description=&quot;In the &amp;apos;Backup&amp;apos; settings, after pressing the &amp;apos;Backup now&amp;apos; option, the"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="34"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_restore&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_restore&quot; translation_description=&quot;In the &amp;apos;Backup&amp;apos; settings, under the &amp;apos;SD card&amp;apos; section, the"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_restore_summary&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_restore_summary&quot;>Restore a snapshot of the settings and the data&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="40"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup&quot; translation_description=&quot;In the &amp;apos;Settings&amp;apos; page, the option to change the data backup related"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="42"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_restore_confirm_message&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_restore_confirm_message&quot; translation_description=&quot;In the &amp;apos;Backup&amp;apos; settings, after pressing the &amp;apos;Restore now&amp;apos; option, the"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="46"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_restore_no_backup&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_restore_no_backup&quot; translation_description=&quot;In the &amp;apos;Backup&amp;apos; settings, after pressing the &amp;apos;Restore now&amp;apos; option, the"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="49"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_restore_progress_message&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_restore_progress_message&quot; translation_description=&quot;In the &amp;apos;Backup&amp;apos; settings, after pressing the &amp;apos;Restore now&amp;apos; option, the"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="51"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_restore_select_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_restore_select_title&quot; translation_description=&quot;In the &amp;apos;Backup&amp;apos; settings, after pressing the &amp;apos;Restore now&amp;apos; option, the"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="54"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_key&quot;>settingsBackup&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="56"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_now_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_now_key&quot;>settingsBackupNow&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="57"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;settings_backup_restore_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;settings_backup_restore_key&quot;>settingsBackupRestore&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="58"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;choose&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;choose&quot;>Choose a backup file&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;pref_summary_drawer_color&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pref_summary_drawer_color&quot;>Set the color for the drawer background&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/colorpicker.xml"
            line="19"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;pref_dialog_title_color_picker&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pref_dialog_title_color_picker&quot;>Pick a color.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/colorpicker.xml"
            line="20"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;pref_dialog_color_picker_alpha&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pref_dialog_color_picker_alpha&quot;>alpha&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/colorpicker.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;pref_dialog_message_color_picker&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pref_dialog_message_color_picker&quot;>Tap on center color to confirm.\nPress back to cancel.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/colorpicker.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;default_wakeup_method&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;default_wakeup_method&quot;>wol&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/no_translate.xml"
            line="4"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_port_default&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;vdr_port_default&quot;>6420&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/no_translate.xml"
            line="5"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_stream_proxy_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;vdr_stream_proxy_key&quot;>key_vdr_stream_proxy&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/no_translate.xml"
            line="14"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timezone_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;timezone_key&quot;>key_timezone&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/no_translate.xml"
            line="15"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_host_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_host_key&quot;>vdr_host&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="4"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_name_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_name_key&quot;>vdr_name&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="5"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_port_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_port_key&quot;>vdr_port &lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="6"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_password_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_password_key&quot;>vdr_password&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="7"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_ssl_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_ssl_key&quot;>vdr_secure&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="8"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_stream_format&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_stream_format&quot;>stream_format&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="9"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_stream_port&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_stream_port&quot;>stream_port&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="10"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;alive_check_enabled_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;alive_check_enabled_key&quot;>alive_check_enabled&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="12"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;alive_check_interval_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;alive_check_interval_key&quot;>alive_check_interval&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="13"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;channel_filter_filter_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;channel_filter_filter_key&quot;>limit_channels&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="15"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;channel_filter_last_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;channel_filter_last_key&quot;>last_channel&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="16"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_pre_start_buffer_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;timer_pre_start_buffer_key&quot;>timer_pre_start_buffer&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="19"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_post_end_buffer_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;timer_post_end_buffer_key&quot;>timer_post_end_buffer&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="20"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_default_priority_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;timer_default_priority_key&quot;>timer_default_priority&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="21"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_default_primary_limit_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;timer_default_primary_limit_key&quot;>timer_default_primary_limit&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="22"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_default_lifetime_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;timer_default_lifetime_key&quot;>timer_default_lifetime&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="23"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;epg_search_times_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;epg_search_times_key&quot;>epg_search_times&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="25"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;current_vdr_id_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;current_vdr_id_key&quot;>key_current_vdr_id&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="26"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;streaming_password_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;streaming_password_key&quot;>key_streaming_password&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="29"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;streaming_username_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;streaming_username_key&quot;>key_streaming_username&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="30"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_encoding_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_encoding_key&quot;>key_vdr_encoding&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="31"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;wakeup_enabled_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;wakeup_enabled_key&quot;>key_wakeup_enabled&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="33"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;wakeup_url_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;wakeup_url_key&quot;>key_wakeup_url&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="34"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;wakeup_user_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;wakeup_user_key&quot;>key_wakeup_user&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="35"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;wakeup_password_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;wakeup_password_key&quot;>key_wakeup_password&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="36"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;wakeup_method_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;wakeup_method_key&quot;>key_wakeup_method&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="37"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;wakeup_wol_custom_broadcast_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;wakeup_wol_custom_broadcast_key&quot;>key_wol_custom_broadcast&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="38"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;wakeup_wol_mac_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;wakeup_wol_mac_key&quot;>key_wakeup_wol_mac&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="39"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;gui_enable_24h_format_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;gui_enable_24h_format_key&quot;>key_enable_24h&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="42"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;gui_channels_show_channel_numbers_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;gui_channels_show_channel_numbers_key&quot;>key_channels_show_channel_numbers&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="43"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;qui_quit_on_back_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;qui_quit_on_back_key&quot;>key_gui_quit_on_back&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="44"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;qui_show_imdb_button_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;qui_show_imdb_button_key&quot;>key_qui_show_imdb_button&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="45"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;qui_show_omdb_button_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;qui_show_omdb_button_key&quot;>key_qui_show_omdb_button&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="46"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;qui_show_tmdb_button_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;qui_show_tmdb_button_key&quot;>key_qui_show_tmdb_button&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="47"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;qui_imdb_url_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;qui_imdb_url_key&quot;>key_qui_imdb_url&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="48"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;gui_custom_locale_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;gui_custom_locale_key&quot;>key_gui_custom_locale&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="49"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_conntimeout_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_conntimeout_key&quot;>key_conntimeout_key&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="52"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_readtimeout_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_readtimeout_key&quot;>key_vdr_readtimeout&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="53"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_timeout_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;vdr_timeout_key&quot;>key_vdr_timeout&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="54"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;gui_max_recent_channels_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;gui_max_recent_channels_key&quot;>key_gui_max_recent_channels&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="56"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;clear_term_after_search_key&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1=" &lt;string name=&quot;clear_term_after_search_key&quot;>key_clear_term_after_search&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="57"
            column="10"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;action_menu_remote&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;action_menu_remote&quot;>Remote&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="10"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_ip46_mode_title&quot; is not translated in &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;vdr_ip46_mode_title&quot;>IPv4/6 selection&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="151"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;vdr_ip46_mode_summary&quot; is not translated in &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;vdr_ip46_mode_summary&quot;>IPv4/6 selection mode&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="152"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_already_exists&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;timer_already_exists&quot;>Timer already defined.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="210"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_created&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;timer_created&quot;>Timer created&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="211"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;Content_Unknown&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;Content_Unknown&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="535"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;label&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;label&quot;>Label&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="561"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;hitkcommand&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;hitkcommand&quot;>HITK Command&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="562"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;menu_reset&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_reset&quot;>Reset&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="563"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;menu_exprt&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_exprt&quot;>Export&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="564"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;export_custom_key_mapping&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;export_custom_key_mapping&quot;>Export Custom Key Mapping&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="565"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;menu_imprt&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_imprt&quot;>Import&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="566"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;menu_remapback&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;menu_remapback&quot;>\&apos;Back\&apos; is \&apos;Back\&apos; HITK&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="567"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;remapback_hint&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;remapback_hint&quot;>Longpress on Back Button to leave the remote.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="568"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;not_yet_implemented&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;not_yet_implemented&quot;>Not Yet Implemented&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="569"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_error&quot; is not translated in &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;timer_error&quot;>Can not create timer: %1$s&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="570"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;permission_rationale&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;permission_rationale&quot;>The app needs Storage permissions to import/export.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="571"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;remote_keys_imported&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;remote_keys_imported&quot;>Remote Keys imported: %1$s&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="572"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;remote_nothing_to_import&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;remote_nothing_to_import&quot; >No custom mapping…&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="573"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;reset&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;reset&quot;>Reset&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="574"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;back&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;back&quot;>Back&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="575"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;ok&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;ok&quot;>OK&lt;/string>"
        errorLine2="            ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="576"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f061&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f061&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="577"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f060&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f060&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="578"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f062&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f062&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="579"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;remotesquares&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;remotesquares&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="580"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;fa_mute&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;fa_mute&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="581"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f129&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f129&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="582"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f177&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f177&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="583"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f0c9&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f0c9&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="584"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f0e2&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f0e2&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="585"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f120&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f120&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="586"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f027&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f027&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="587"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f0ab&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f0ab&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="588"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f063&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f063&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="589"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f028&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f028&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="590"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f0aa&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f0aa&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="591"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f085&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f085&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="592"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;fa_power_off&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;fa_power_off&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="593"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;fa_bars&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;fa_bars&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="594"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;f025&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian), &quot;fr&quot; (French), &quot;pl&quot; (Polish)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;f025&quot;>&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="595"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_detail_title_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="  &lt;string name=&quot;timer_detail_title_title&quot;>Title:&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/timers.xml"
            line="4"
            column="11"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_detail_channel_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="  &lt;string name=&quot;timer_detail_channel_title&quot;>Channel:&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/timers.xml"
            line="5"
            column="11"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_detail_start_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="  &lt;string name=&quot;timer_detail_start_title&quot;>Start:&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/timers.xml"
            line="6"
            column="11"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_detail_end_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="  &lt;string name=&quot;timer_detail_end_title&quot;>End:&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/timers.xml"
            line="7"
            column="11"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_details_create_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="  &lt;string name=&quot;timer_details_create_title&quot;>Create timer&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/timers.xml"
            line="9"
            column="11"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_details_save_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="  &lt;string name=&quot;timer_details_save_title&quot;>Save changes&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/timers.xml"
            line="10"
            column="11"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_details_delete_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="  &lt;string name=&quot;timer_details_delete_title&quot;>Delete timer&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/timers.xml"
            line="11"
            column="11"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_details_add_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="  &lt;string name=&quot;timer_details_add_title&quot;>Create a new timer&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/timers.xml"
            line="13"
            column="11"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Warning"
        message="&quot;timer_details_modify_title&quot; is not translated in &quot;de&quot; (German), &quot;uk&quot; (Ukrainian), &quot;it&quot; (Italian)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="  &lt;string name=&quot;timer_details_modify_title&quot;>Modify a timer&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/timers.xml"
            line="14"
            column="11"/>
    </issue>

    <issue
        id="Typos"
        severity="Warning"
        message="&quot;adn&quot; is a common misspelling; did you mean &quot;and&quot;?"
        category="Correctness:Messages"
        priority="7"
        summary="Spelling error"
        explanation="This check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged."
        errorLine1="        &lt;item> adn &lt;/item>"
        errorLine2="                ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/arrays.xml"
            line="64"
            column="17"/>
    </issue>

    <issue
        id="Typos"
        severity="Warning"
        message="&quot;Hobbies&quot; is a common misspelling; did you mean &quot;Hobbys&quot;?"
        category="Correctness:Messages"
        priority="7"
        summary="Spelling error"
        explanation="This check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged."
        errorLine1="  &lt;string name=&quot;Content_Leisure__Hobbies&quot;>Freizeit/Hobbies&lt;/string>"
        errorLine2="                                                   ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="465"
            column="52"/>
    </issue>

    <issue
        id="StringFormatCount"
        severity="Warning"
        message="Inconsistent number of arguments in formatting string `groupby_window_title_templte`; found both 1 here and 0 in values-pl/strings.xml"
        category="Correctness:Messages"
        priority="5"
        summary="Formatting argument types incomplete or inconsistent"
        explanation="When a formatted string takes arguments, it usually needs to reference the same arguments in all translations (or all arguments if there are no translations.&#xA;&#xA;There are cases where this is not the case, so this issue is a warning rather than an error by default. However, this usually happens when a language is not translated or updated correctly."
        errorLine1="  &lt;string name=&quot;groupby_window_title_templte&quot;>Групувати за %1$s&lt;/string>"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="26"
            column="3"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="25"
            column="3"
            message="Conflicting number of arguments (0) here"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkClientTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers."
        url="https://goo.gle/TrustAllX509TrustManager"
        urls="https://goo.gle/TrustAllX509TrustManager"
        errorLine1="          public void checkClientTrusted(final X509Certificate[] chain, final String authType) throws CertificateException {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/svdrp/MySSLSocketFactory.java"
            line="182"
            column="23"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkServerTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers."
        url="https://goo.gle/TrustAllX509TrustManager"
        urls="https://goo.gle/TrustAllX509TrustManager"
        errorLine1="          public void checkServerTrusted(final X509Certificate[] chain, final String authType) throws CertificateException {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/svdrp/MySSLSocketFactory.java"
            line="202"
            column="23"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkClientTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers."
        url="https://goo.gle/TrustAllX509TrustManager"
        urls="https://goo.gle/TrustAllX509TrustManager"
        errorLine1="          public void checkClientTrusted(final X509Certificate[] chain, final String authType) throws CertificateException {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/svdrp/MySSLSocketFactory.java"
            line="206"
            column="23"/>
    </issue>

    <issue
        id="UnsafeIntentLaunch"
        severity="Warning"
        message="This intent could be coming from an untrusted source. It is later launched by \&#xA;an unprotected component de.bjusystems.vdrmanager.ng.remote.RemoteActivity. You could either make the component de.bjusystems.vdrmanager.ng.remote.RemoteActivity \&#xA;protected; or sanitize this intent using androidx.core.content.IntentSanitizer."
        category="Security"
        priority="6"
        summary="Launched Unsafe Intent"
        explanation="Intent that potentially could come from an untrusted source should not be launched from an unprotected component without first being sanitized. See this support FAQ for details: https://support.google.com/faqs/answer/9267555"
        errorLine1="            Intent intent = getIntent();"
        errorLine2="                            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="361"
            column="29"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="367"
            column="13"
            message="The unsafe intent is launched here."/>
    </issue>

    <issue
        id="CustomX509TrustManager"
        severity="Warning"
        message="Implementing a custom `X509TrustManager` is error-prone and likely to be insecure. It is likely to disable certificate validation altogether, and is non-trivial to implement correctly without calling Android&apos;s default implementation."
        category="Security"
        priority="5"
        summary="Implements custom TLS trust manager"
        explanation="This check looks for custom `X509TrustManager` implementations."
        url="https://goo.gle/CustomX509TrustManager"
        urls="https://goo.gle/CustomX509TrustManager"
        errorLine1="        new X509TrustManager() {"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/svdrp/MySSLSocketFactory.java"
            line="144"
            column="13"/>
    </issue>

    <issue
        id="CustomX509TrustManager"
        severity="Warning"
        message="Implementing a custom `X509TrustManager` is error-prone and likely to be insecure. It is likely to disable certificate validation altogether, and is non-trivial to implement correctly without calling Android&apos;s default implementation."
        category="Security"
        priority="5"
        summary="Implements custom TLS trust manager"
        explanation="This check looks for custom `X509TrustManager` implementations."
        url="https://goo.gle/CustomX509TrustManager"
        urls="https://goo.gle/CustomX509TrustManager"
        errorLine1="        new X509TrustManager() {"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/svdrp/MySSLSocketFactory.java"
            line="195"
            column="13"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="            canvas.drawOval(new RectF(-r, -r, r, r), mPaint);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerDialog.java"
            line="109"
            column="29"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="   canvas.drawOval(new RectF(-r, -r, r, r), mPaint);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerPreference.java"
            line="108"
            column="20"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="        canvas.drawOval(new RectF(-r, -r, r, r), mPaint);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerView.java"
            line="74"
            column="25"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="        mPath = new Path();"
        errorLine2="                ~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/com/viewpagerindicator/TitlePageIndicator.java"
            line="381"
            column="17"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="                mPath = new Path();"
        errorLine2="                        ~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/com/viewpagerindicator/TitlePageIndicator.java"
            line="389"
            column="25"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="                mPath = new Path();"
        errorLine2="                        ~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/com/viewpagerindicator/TitlePageIndicator.java"
            line="403"
            column="25"/>
    </issue>

    <issue
        id="NotifyDataSetChanged"
        severity="Warning"
        message="It will always be more efficient to use more specific change events if you can. Rely on `notifyDataSetChanged` as a last resort."
        category="Performance"
        priority="8"
        summary="Invalidating All RecyclerView Data"
        explanation="The `RecyclerView` adapter&apos;s `onNotifyDataSetChanged` method does not specify what about the data set has changed, forcing any observers to assume that all existing items and structure may no longer be valid. `LayoutManager`s will be forced to fully rebind and relayout all visible views."
        errorLine1="        mAdapter.notifyDataSetChanged();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/com/rajasharan/widget/RecyclerDropdown.java"
            line="59"
            column="9"/>
    </issue>

    <issue
        id="Recycle"
        severity="Warning"
        message="This `TypedArray` should be recycled after use with `#recycle()`"
        category="Performance"
        priority="7"
        summary="Missing `recycle()` calls"
        explanation="Many resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a `recycle()` call) after use. This lint check looks for missing `recycle()` calls."
        errorLine1="            TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.ColoredButton);"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ColoredButton.java"
            line="44"
            column="45"/>
    </issue>

    <issue
        id="Recycle"
        severity="Warning"
        message="This `TypedArray` should be recycled after use with `#recycle()`"
        category="Performance"
        priority="7"
        summary="Missing `recycle()` calls"
        explanation="Many resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a `recycle()` call) after use. This lint check looks for missing `recycle()` calls."
        errorLine1="        a = context.obtainStyledAttributes(attrs, paddingAttrs);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/com/rajasharan/widget/SearchableSpinner.java"
            line="63"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentTop`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_alignParentTop=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="55"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignWithParentIfMissing`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_alignWithParentIfMissing=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="56"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="57"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentTop`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="            android:layout_alignParentTop=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list_fragment.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignWithParentIfMissing`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="            android:layout_alignWithParentIfMissing=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list_fragment.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="            android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list_fragment.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerVertical`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="            android:layout_centerVertical=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="62"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `TableRow`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="164"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `TableRow`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="206"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                    android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="39"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_below`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_below=&quot;@id/epg_list_channel_spinner&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/search_epg_list.xml"
            line="15"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignWithParentIfMissing`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_alignWithParentIfMissing=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/search_epg_list.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentTop`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_alignParentTop=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/search_epg_list.xml"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/search_epg_list.xml"
            line="18"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                    android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="37"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                    android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="56"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentTop`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_alignParentTop=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="67"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignWithParentIfMissing`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_alignWithParentIfMissing=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="68"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_below`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_below=&quot;@id/epg_list_time_spinner&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="69"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="70"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentTop`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_alignParentTop=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_list.xml"
            line="23"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignWithParentIfMissing`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_alignWithParentIfMissing=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_list.xml"
            line="24"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_list.xml"
            line="25"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 10"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@TargetApi(10)"
        errorLine2="~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/Api10Adapter.java"
            line="26"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 11"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@TargetApi(11)"
        errorLine2="~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/Api11Adapter.java"
            line="36"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 14"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@TargetApi(14)"
        errorLine2="~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/Api14Adapter.java"
            line="30"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 8"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@TargetApi(8)"
        errorLine2="~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/Api8BackupPreferencesListener.java"
            line="30"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 9"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@TargetApi(9)"
        errorLine2="~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/Api9Adapter.java"
            line="30"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="      if (Build.VERSION.SDK_INT >= 14) {"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/ApiAdapterFactory.java"
            line="34"
            column="11"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="      } else if (Build.VERSION.SDK_INT >= 11) {"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/ApiAdapterFactory.java"
            line="37"
            column="18"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="      } else if (Build.VERSION.SDK_INT >= 10) {"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/ApiAdapterFactory.java"
            line="40"
            column="18"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="      } else if (Build.VERSION.SDK_INT >= 9) {"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/ApiAdapterFactory.java"
            line="43"
            column="18"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="      } else if (Build.VERSION.SDK_INT >= 8) {"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/ApiAdapterFactory.java"
            line="46"
            column="18"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is never &lt; 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="   if (Build.VERSION.SDK_INT &lt; 11) {"
        errorLine2="       ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="205"
            column="8"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="          if( Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ColoredButton.java"
            line="61"
            column="15"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if( Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN){"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ColoredButton.java"
            line="83"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="358"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 23"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    @androidx.annotation.RequiresApi(Build.VERSION_CODES.M)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/VdrManagerActivity.java"
            line="59"
            column="5"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This field leaks a context object"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1=" /** Context */"
        errorLine2=" ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/wakeup/AsyncWakeupTask.java"
            line="16"
            column="2"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This field leaks a context object"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="  private BackupActivity backupActivity;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/BackupAsyncTask.java"
            line="35"
            column="3"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (anonymous de.bjusystems.vdrmanager.ng.tasks.VoidAsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="          new VoidAsyncTask() {"
        errorLine2="          ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/BaseEventListActivity.java"
            line="216"
            column="11"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="Do not place Android context classes in static fields (static reference to `RecentChannelsAdapter` which has field `context` pointing to `Activity`); this is a memory leak"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1=" static RecentChannelsAdapter RECENT_ADAPTER = null;"
        errorLine2=" ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="183"
            column="2"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (anonymous de.bjusystems.vdrmanager.ng.tasks.VoidAsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="          new VoidAsyncTask() {"
        errorLine2="          ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="355"
            column="11"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (anonymous de.bjusystems.vdrmanager.ng.tasks.VoidAsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="  new VoidAsyncTask() {"
        errorLine2="  ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/ChannelListActivity.java"
            line="519"
            column="3"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (anonymous de.bjusystems.vdrmanager.ng.tasks.VoidAsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="        new VoidAsyncTask() {"
        errorLine2="        ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="229"
            column="9"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (anonymous de.bjusystems.vdrmanager.ng.remote.RemoteActivity.HitkAsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="            new HitkAsyncTask() {"
        errorLine2="            ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="151"
            column="13"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (anonymous de.bjusystems.vdrmanager.ng.tasks.VoidAsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="            new VoidAsyncTask() {"
        errorLine2="            ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="284"
            column="13"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (anonymous de.bjusystems.vdrmanager.ng.remote.RemoteActivity.HitkAsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="        new HitkAsyncTask() {"
        errorLine2="        ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="408"
            column="9"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (de.bjusystems.vdrmanager.ng.remote.RemoteActivity.HitkAsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="    class HitkAsyncTask extends AsyncTask&lt;String, Void, Void> {"
        errorLine2="          ~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/remote/RemoteActivity.java"
            line="746"
            column="11"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This field leaks a context object"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1=" private RestoreActivity restoreActivity;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/backup/RestoreAsyncTask.java"
            line="35"
            column="2"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="Do not place Android context classes in static fields (static reference to `VdrManagerExceptionHandler` which has field `context` pointing to `Context`); this is a memory leak"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="    private static VdrManagerExceptionHandler INSTANCE;"
        errorLine2="            ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/utils/VdrManagerExceptionHandler.java"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (anonymous de.bjusystems.vdrmanager.ng.tasks.VoidAsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="                new VoidAsyncTask() {"
        errorLine2="                ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/VdrPreferencesActivity.java"
            line="205"
            column="17"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (anonymous android.os.AsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="                new AsyncTask&lt;Void, String, List&lt;String>>() {"
        errorLine2="                ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/VdrPreferencesActivity.java"
            line="256"
            column="17"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one `&lt;TextView/>` and a compound drawable"
        category="Performance"
        priority="6"
        summary="Node can be replaced by a `TextView` with compound drawables"
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).&#xA;&#xA;If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.&#xA;&#xA;There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="&lt;LinearLayout"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_item.xml"
            line="3"
            column="2"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one `&lt;TextView/>` and a compound drawable"
        category="Performance"
        priority="6"
        summary="Node can be replaced by a `TextView` with compound drawables"
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).&#xA;&#xA;If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.&#xA;&#xA;There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="50"
            column="6"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one `&lt;TextView/>` and a compound drawable"
        category="Performance"
        priority="6"
        summary="Node can be replaced by a `TextView` with compound drawables"
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).&#xA;&#xA;If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.&#xA;&#xA;There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="            &lt;LinearLayout android:id=&quot;@+id/audio_block&quot;"
        errorLine2="             ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="110"
            column="14"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Boolean.valueOf(isAnimating)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="        setTag(IS_ANIMATING_TAG_ID, new Boolean(isAnimating));"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/androvdr/widget/AnimatedTextView.java"
            line="99"
            column="37"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set `android:baselineAligned=&quot;false&quot;` on this element for better performance"
        category="Performance"
        priority="3"
        summary="Missing `baselineAligned` attribute"
        explanation="When a `LinearLayout` is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="29"
            column="6"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `wrap_content` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="            android:layout_width=&quot;wrap_content&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/edit_remote_key.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `fill_parent` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="            android:layout_width=&quot;fill_parent&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="68"
            column="13"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_height` of `0dp` instead of `wrap_content` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="        android:layout_height=&quot;wrap_content&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="92"
            column="9"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `wrap_content` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="   android:ellipsize=&quot;end&quot; android:layout_width=&quot;wrap_content&quot; android:background=&quot;@android:drawable/list_selector_background&quot;"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="28"
            column="28"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `wrap_content` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="   android:layout_width=&quot;wrap_content&quot; android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="51"
            column="4"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `fill_parent` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="                    android:layout_width=&quot;fill_parent&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="28"
            column="21"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `wrap_content` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="        android:layout_width=&quot;wrap_content&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/folder_item.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_height` of `0dp` instead of `wrap_content` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="        android:layout_height=&quot;wrap_content&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="11"
            column="9"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_height` of `0dp` instead of `fill_parent` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="            android:layout_height=&quot;fill_parent&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="85"
            column="13"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `wrap_content` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="                    android:layout_width=&quot;wrap_content&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="45"
            column="21"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_height` of `0dp` instead of `wrap_content` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="        android:layout_height=&quot;wrap_content&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="12"
            column="9"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a `LinearLayout` with non-zero weights is nested inside another `LinearLayout` with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="            android:layout_weight=&quot;1&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/vdrmanager.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a `LinearLayout` with non-zero weights is nested inside another `LinearLayout` with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="   android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="28"
            column="4"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a `LinearLayout` with non-zero weights is nested inside another `LinearLayout` with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="   android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="56"
            column="4"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a `LinearLayout` with non-zero weights is nested inside another `LinearLayout` with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="            android:layout_weight=&quot;1&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/vdrmanager.xml"
            line="70"
            column="13"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a `LinearLayout` with non-zero weights is nested inside another `LinearLayout` with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="   android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="86"
            column="4"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `#111` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;#111&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/left_drawer.xml"
            line="16"
            column="5"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.action_search` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi/action_search.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.sd_card_canceled` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;sd_card_canceled&quot; translation_description=&quot;When importing/saving to the SD card, the message indicating that the"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.sd_card_import_error_no_file` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;sd_card_import_error_no_file&quot; translation_description=&quot;When importing from the SD card, the error message indicating that no"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="14"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.sd_card_import_progress_message` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;sd_card_import_progress_message&quot; translation_description=&quot;When importing from the SD card, the progress message.&quot;>    Importing from SD card...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.sd_card_save_progress_message` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;sd_card_save_progress_message&quot; translation_description=&quot;When saving to the SD card, the progress message.&quot;>    Saving to SD card...&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="24"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.choose` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;choose&quot;>Choose a backup file&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.btn_circle` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-finger/btn_circle.xml"
            line="17"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.btn_circle_disable` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_disable.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.btn_circle_disable_focused` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_disable_focused.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.btn_circle_normal` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_normal.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.btn_circle_pressed` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_pressed.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.btn_circle_selected` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi-finger/btn_circle_selected.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.btn_clock` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_clock.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.btn_search` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_search.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.channel_item` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_item.xml"
            line="3"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.channel_list_fragment` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;ViewFlipper xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list_fragment.xml"
            line="1"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.menu.channel_list_group_menu` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/menu/channel_list_group_menu.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.pref_summary_drawer_color` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;pref_summary_drawer_color&quot;>Set the color for the drawer background&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/colorpicker.xml"
            line="19"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.item_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;item_margin&quot;>0dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/dimens.xml"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.epg_search` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_search.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.fa_search` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/fa_search.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_btn_round_minus` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_btn_round_minus.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_btn_round_plus` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_btn_round_plus.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_drawer` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi/ic_drawer.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_back` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_back.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_forward` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_forward.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_moreoverflow` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi/ic_menu_moreoverflow.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_video` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi/ic_menu_video.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_video_small` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_video_small.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.icon` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/icon.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.left` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/left.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.main` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;TabHost xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/main.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.no_connection` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/no_connection.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.default_wakeup_method` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;default_wakeup_method&quot;>wol&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/no_translate.xml"
            line="4"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.vdr_port_default` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;vdr_port_default&quot;>6420&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/no_translate.xml"
            line="5"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.vdr_stream_proxy_key` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;vdr_stream_proxy_key&quot;>key_vdr_stream_proxy&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/no_translate.xml"
            line="14"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.timer_default_primary_limit_key` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1=" &lt;string name=&quot;timer_default_primary_limit_key&quot;>timer_default_primary_limit&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="22"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.clear_term_after_search_key` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1=" &lt;string name=&quot;clear_term_after_search_key&quot;>key_clear_term_after_search&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/preferences_keys.xml"
            line="57"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.recording_detail` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.red_button` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:shape=&quot;rectangle&quot; >"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/red_button.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.remote_test` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.right` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/right.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.roundedbutton` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/roundedbutton.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.slide_down_in` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/anim/slide_down_in.xml"
            line="17"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.slide_down_out` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/anim/slide_down_out.xml"
            line="17"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.slide_left_in` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/anim/slide_left_in.xml"
            line="17"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.slide_left_out` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/anim/slide_left_out.xml"
            line="17"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.slide_right_in` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/anim/slide_right_in.xml"
            line="17"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.slide_right_out` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/anim/slide_right_out.xml"
            line="17"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.slide_up_in` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/anim/slide_up_in.xml"
            line="17"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.slide_up_out` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/anim/slide_up_out.xml"
            line="17"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.channel_item_menu_epg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;channel_item_menu_epg&quot;>Show EPG&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="12"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.channel_item_menu_hide` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;channel_item_menu_hide&quot;>Hide&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="14"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.channel_item_menu_hide_permanent` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;channel_item_menu_hide_permanent&quot;>Hide permanent&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="15"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.channel_group_menu_hide` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;channel_group_menu_hide&quot;>Hide&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="16"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.channel_group_menu_hide_permanent` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;channel_group_menu_hide_permanent&quot;>Hide permanent&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="17"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.groupby_name` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;groupby_name&quot;>Name&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.groupby_channel` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;groupby_channel&quot;>By Channel&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="23"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.groupby_date` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;groupby_date&quot;>By Date&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="24"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.done` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;done&quot;>Done&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="35"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.update_will_start_in` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;update_will_start_in&quot;>Update will start in one second&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="51"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.epg_menu_search` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;epg_menu_search&quot;>Search EPG&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="52"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.epg_menu_times` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;epg_menu_times&quot;>Search times&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="53"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.epg_item_menu_timer_record` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;epg_item_menu_timer_record&quot;>Record&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="55"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.epg_event_share_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;epg_event_share_text&quot;>Share&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="76"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.epg_event_modify_timer_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;epg_event_modify_timer_text&quot;>Modify timer&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="82"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.epg_search_button` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;epg_search_button&quot;>Search&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="85"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.new_timer` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;new_timer&quot;>New timer&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="98"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.settings_livetv_summary` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;settings_livetv_summary&quot;>Needs streamdev-server on VDR and an external"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="101"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.key_remux_enable` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;key_remux_enable&quot;>remux_enable&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="117"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.key_remux_command` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;key_remux_command&quot;>remux_command&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="118"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.key_remux_parameter` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;key_remux_parameter&quot;>remux_parameter&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="119"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.stream_choose_audio` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;stream_choose_audio&quot;>Choose Audio Track&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="121"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.timer_default_primary_limit_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;timer_default_primary_limit_title&quot;>Default primary limit&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="206"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.timer_default_primary_limit_summary` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;timer_default_primary_limit_summary&quot;>Default primary limit&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="207"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.gui_quit_on_back_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;gui_quit_on_back_title&quot;>Quit on back button&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="221"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.gui_quit_on_back_summary_on` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;gui_quit_on_back_summary_on&quot;>Back button quits the VDR-Manager&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="222"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.gui_quit_on_back_summary_off` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;gui_quit_on_back_summary_off&quot;>Back button does not quit VDR-Manager&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="223"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.vdr_advanced_preferences` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;vdr_advanced_preferences&quot;>Advanced&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="263"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.vdr_advanced_preferences_summary` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;vdr_advanced_preferences_summary&quot;>Advanced settings&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="264"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.progress_connect_finished_abnormal_arg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;progress_connect_finished_abnormal_arg&quot;>Connection finished abnormal: %1$s&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="330"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.progress_cache_hit` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;progress_cache_hit&quot;>Loaded from cache.&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="331"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.timer_detail_priority_hint` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;timer_detail_priority_hint&quot;>e.g. 50&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="365"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.timer_detail_title_vps` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;timer_detail_title_vps&quot;>%1$s (VPS)&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="366"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.sortby` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;sortby&quot;>Sort by&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="372"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.sortby_time` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;sortby_time&quot;>Time&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="373"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.sortby_channel` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;sortby_channel&quot;>Channel&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="374"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.sortby_alphabet` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;sortby_alphabet&quot;>Alphabet&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="375"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.sortby_channellist` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;sortby_channellist&quot;>Chanellist&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="376"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.audio_tracks_template` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;audio_tracks_template&quot;>Audio Tracks: %1$s&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="422"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.recording_started` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;recording_started&quot;>Recording started&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="432"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.drive_img` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;drive_img&quot;>Drive&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="539"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.clear_term_after_search_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;clear_term_after_search_title&quot;>Clear Term after Search&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="542"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.clear_term_after_search_summary_off` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;clear_term_after_search_summary_off&quot;>Search term remains after peforming search&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="543"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.clear_term_after_search_summary_on` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;clear_term_after_search_summary_on&quot;>Term gets cleared after performing search&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="544"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.action_websearch` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;action_websearch&quot;>Web search&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="547"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.not_yet_implemented` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;not_yet_implemented&quot;>Not Yet Implemented&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="569"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.timer_error` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;timer_error&quot;>Can not create timer: %1$s&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/strings.xml"
            line="570"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.Theme_PageIndicatorDefaults` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;style name=&quot;Theme.PageIndicatorDefaults&quot; parent=&quot;@android:style/Theme&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/styles.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.MinusButton` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;style name=&quot;MinusButton&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/styles.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.PlusButton` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;style name=&quot;PlusButton&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/styles.xml"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.Line2` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;style name=&quot;Line2&quot;>"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/styles.xml"
            line="74"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.timer_operation_list_item` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;TextView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_operation_list_item.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.timer_details_delete_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="  &lt;string name=&quot;timer_details_delete_title&quot;>Delete timer&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/timers.xml"
            line="11"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.vdrlist` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrlist.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.vdrmanager_menu_item` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;TextView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager_menu_item.xml"
            line="3"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.video` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout"
        errorLine2="^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/video.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is unnecessary"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="            &lt;LinearLayout"
        errorLine2="             ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="73"
            column="14"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is unnecessary"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="        &lt;LinearLayout"
        errorLine2="         ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list_fragment.xml"
            line="44"
            column="10"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is unnecessary; transfer the `background` attribute to the other view"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1=" &lt;LinearLayout android:layout_width=&quot;fill_parent&quot;"
        errorLine2="  ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/child_layout.xml"
            line="5"
            column="3"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is unnecessary; transfer the `background` attribute to the other view"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="&lt;LinearLayout android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:orientation=&quot;vertical&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="7"
            column="2"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is unnecessary"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="            &lt;LinearLayout"
        errorLine2="             ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="87"
            column="14"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is unnecessary"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/no_connection.xml"
            line="8"
            column="6"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `RelativeLayout` parent is unnecessary"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="            &lt;LinearLayout"
        errorLine2="             ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="348"
            column="14"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is unnecessary"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="  &lt;LinearLayout android:layout_height=&quot;fill_parent&quot;"
        errorLine2="   ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/search_epg_list.xml"
            line="30"
            column="4"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is unnecessary"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="            &lt;LinearLayout"
        errorLine2="             ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="86"
            column="14"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is unnecessary"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="            &lt;LinearLayout"
        errorLine2="             ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_list.xml"
            line="35"
            column="14"/>
    </issue>

    <issue
        id="RedundantNamespace"
        severity="Warning"
        message="This namespace declaration is redundant"
        category="Performance"
        priority="1"
        summary="Redundant namespace"
        explanation="In Android XML documents, only specify the namespace on the root/document element. Namespace declarations elsewhere in the document are typically accidental leftovers from copy/pasting XML from other files or documentation."
        errorLine1="        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="30"
            column="9"/>
    </issue>

    <issue
        id="RedundantNamespace"
        severity="Warning"
        message="This namespace declaration is redundant"
        category="Performance"
        priority="1"
        summary="Redundant namespace"
        explanation="In Android XML documents, only specify the namespace on the root/document element. Namespace declarations elsewhere in the document are typically accidental leftovers from copy/pasting XML from other files or documentation."
        errorLine1="&lt;ViewFlipper xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_list.xml"
            line="7"
            column="14"/>
    </issue>

    <issue
        id="UnusedNamespace"
        severity="Warning"
        message="Unused namespace declaration xmlns:android; already declared on the root element"
        category="Performance"
        priority="1"
        summary="Unused namespace"
        explanation="Unused namespace declarations take up space and require processing that is not necessary"
        errorLine1="        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="30"
            column="9"/>
    </issue>

    <issue
        id="UnusedNamespace"
        severity="Warning"
        message="Unused namespace declaration xmlns:android; already declared on the root element"
        category="Performance"
        priority="1"
        summary="Unused namespace"
        explanation="Unused namespace declarations take up space and require processing that is not necessary"
        errorLine1="&lt;ViewFlipper xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_list.xml"
            line="7"
            column="14"/>
    </issue>

    <issue
        id="TypographyDashes"
        severity="Warning"
        message="Replace &quot;-&quot; with an &quot;en dash&quot; character (–, &amp;#8211;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Hyphen can be replaced with dash"
        explanation="The &quot;n dash&quot; (\u2013, &amp;#8211;) and the &quot;m dash&quot; (\u2014, &amp;#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished."
        url="https://en.wikipedia.org/wiki/Dash"
        urls="https://en.wikipedia.org/wiki/Dash"
        errorLine1="  &lt;string name=&quot;channel_filter_last_summary&quot;>Comma separated channelnumbers or ranges (separator \&apos;-\&apos;). A.e. 1,2,4-10&lt;/string>"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="144"
            column="46"/>
    </issue>

    <issue
        id="TypographyDashes"
        severity="Warning"
        message="Replace &quot;-&quot; with an &quot;en dash&quot; character (–, &amp;#8211;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Hyphen can be replaced with dash"
        explanation="The &quot;n dash&quot; (\u2013, &amp;#8211;) and the &quot;m dash&quot; (\u2014, &amp;#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished."
        url="https://en.wikipedia.org/wiki/Dash"
        urls="https://en.wikipedia.org/wiki/Dash"
        errorLine1="  &lt;string name=&quot;channel_filter_last_summary&quot;>Kommagetrennte Kanalnummern oder Bereiche (\&apos;-\&apos;). z.B. 1,2,4-10&lt;/string>"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-de/strings.xml"
            line="145"
            column="46"/>
    </issue>

    <issue
        id="TypographyDashes"
        severity="Warning"
        message="Replace &quot;-&quot; with an &quot;en dash&quot; character (–, &amp;#8211;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Hyphen can be replaced with dash"
        explanation="The &quot;n dash&quot; (\u2013, &amp;#8211;) and the &quot;m dash&quot; (\u2014, &amp;#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished."
        url="https://en.wikipedia.org/wiki/Dash"
        urls="https://en.wikipedia.org/wiki/Dash"
        errorLine1="  &lt;string name=&quot;channel_filter_last_summary&quot;>Numero di canali o sequenze separate da virgole (separatore \&apos;-\&apos;). Es. 1,2,4-10&lt;/string>"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="145"
            column="46"/>
    </issue>

    <issue
        id="TypographyDashes"
        severity="Warning"
        message="Replace &quot;-&quot; with an &quot;en dash&quot; character (–, &amp;#8211;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Hyphen can be replaced with dash"
        explanation="The &quot;n dash&quot; (\u2013, &amp;#8211;) and the &quot;m dash&quot; (\u2014, &amp;#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished."
        url="https://en.wikipedia.org/wiki/Dash"
        urls="https://en.wikipedia.org/wiki/Dash"
        errorLine1="  &lt;string name=&quot;channel_filter_last_summary&quot;>Розділені комами номери каналів або діапазони (роздільник \&quot;-\&quot;). Наприклад 1,2,4-10&lt;/string>"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="145"
            column="46"/>
    </issue>

    <issue
        id="TypographyDashes"
        severity="Warning"
        message="Replace &quot;-&quot; with an &quot;en dash&quot; character (–, &amp;#8211;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Hyphen can be replaced with dash"
        explanation="The &quot;n dash&quot; (\u2013, &amp;#8211;) and the &quot;m dash&quot; (\u2014, &amp;#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished."
        url="https://en.wikipedia.org/wiki/Dash"
        urls="https://en.wikipedia.org/wiki/Dash"
        errorLine1="  &lt;string name=&quot;channel_filter_last_summary&quot;>Séparer par une virgule les numéros de chaîne ou les intervalles (séparateur \&apos;-\&apos;). Ex: 1,2,4-10&lt;/string>"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/strings.xml"
            line="146"
            column="46"/>
    </issue>

    <issue
        id="TypographyDashes"
        severity="Warning"
        message="Replace &quot;-&quot; with an &quot;en dash&quot; character (–, &amp;#8211;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Hyphen can be replaced with dash"
        explanation="The &quot;n dash&quot; (\u2013, &amp;#8211;) and the &quot;m dash&quot; (\u2014, &amp;#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished."
        url="https://en.wikipedia.org/wiki/Dash"
        urls="https://en.wikipedia.org/wiki/Dash"
        errorLine1="  &lt;string name=&quot;Content_Entertainment_Programme_for_6_to_14&quot;>Розважальна програма для 6-14 років&lt;/string>"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="428"
            column="62"/>
    </issue>

    <issue
        id="TypographyDashes"
        severity="Warning"
        message="Replace &quot;-&quot; with an &quot;en dash&quot; character (–, &amp;#8211;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Hyphen can be replaced with dash"
        explanation="The &quot;n dash&quot; (\u2013, &amp;#8211;) and the &quot;m dash&quot; (\u2014, &amp;#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished."
        url="https://en.wikipedia.org/wiki/Dash"
        urls="https://en.wikipedia.org/wiki/Dash"
        errorLine1="  &lt;string name=&quot;Content_Entertainment_Programme_for_10_to_16&quot;>Розважальна програма для 10-16 років&lt;/string>"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="429"
            column="63"/>
    </issue>

    <issue
        id="TypographyDashes"
        severity="Warning"
        message="Replace &quot;-&quot; with an &quot;en dash&quot; character (–, &amp;#8211;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Hyphen can be replaced with dash"
        explanation="The &quot;n dash&quot; (\u2013, &amp;#8211;) and the &quot;m dash&quot; (\u2014, &amp;#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished."
        url="https://en.wikipedia.org/wiki/Dash"
        urls="https://en.wikipedia.org/wiki/Dash"
        errorLine1="  &lt;string name=&quot;Content_Entertainment_Programme_for_6_to_14&quot;>Programme de divertissement pour les 6-14 ans&lt;/string>"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/strings.xml"
            line="430"
            column="62"/>
    </issue>

    <issue
        id="TypographyDashes"
        severity="Warning"
        message="Replace &quot;-&quot; with an &quot;en dash&quot; character (–, &amp;#8211;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Hyphen can be replaced with dash"
        explanation="The &quot;n dash&quot; (\u2013, &amp;#8211;) and the &quot;m dash&quot; (\u2014, &amp;#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished."
        url="https://en.wikipedia.org/wiki/Dash"
        urls="https://en.wikipedia.org/wiki/Dash"
        errorLine1="  &lt;string name=&quot;Content_Entertainment_Programme_for_10_to_16&quot;>Programme de divertissement pour les 10 - 16 ans&lt;/string>"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/strings.xml"
            line="431"
            column="63"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;generic_progress_title&quot; translation_description=&quot;The title on a progress dialog asking the user to wait.&quot;>    Veuillez attendre...&lt;/string>"
        errorLine2="                                                                                                                              ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/backup.xml"
            line="4"
            column="127"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;generic_progress_title&quot; translation_description=&quot;The title on a progress dialog asking the user to wait.&quot;>    Proszę czekać ...&lt;/string>"
        errorLine2="                                                                                                                              ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/backup.xml"
            line="4"
            column="127"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="    &lt;string name=&quot;generic_progress_title&quot; translation_description=&quot;The title on a progress dialog asking the user to wait.&quot;>    Please wait...&lt;/string>"
        errorLine2="                                                                                                                                ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="4"
            column="129"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;sd_card_import_progress_message&quot; translation_description=&quot;When importing from the SD card, the progress message.&quot;>    Import depuis la carte SD...&lt;/string>"
        errorLine2="                                                                                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/backup.xml"
            line="10"
            column="135"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;sd_card_import_progress_message&quot; translation_description=&quot;When importing from the SD card, the progress message.&quot;>    Import z karty SD ...&lt;/string>"
        errorLine2="                                                                                                                                      ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/backup.xml"
            line="11"
            column="135"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;sd_card_save_progress_message&quot; translation_description=&quot;When saving to the SD card, the progress message.&quot;>    Sauvegarde sur la carte SD...&lt;/string>"
        errorLine2="                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/backup.xml"
            line="14"
            column="128"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;sd_card_save_progress_message&quot; translation_description=&quot;When saving to the SD card, the progress message.&quot;>    Zapis na kartę pamięci...&lt;/string>"
        errorLine2="                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/backup.xml"
            line="15"
            column="128"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="    &lt;string name=&quot;sd_card_import_progress_message&quot; translation_description=&quot;When importing from the SD card, the progress message.&quot;>    Importing from SD card...&lt;/string>"
        errorLine2="                                                                                                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="18"
            column="137"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;settings_backup_now_progress_message&quot; translation_description=&quot;In the &apos;Backup&apos; settings, after pressing the &apos;Backup now&apos; option, the       progress message telling the user that it is writing all data and settings to the SD card.&quot;>    Écriture de toutes les données et des paramètres...&lt;/string>"
        errorLine2="                                                                                                                                                                                                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/backup.xml"
            line="19"
            column="252"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;settings_backup_now_progress_message&quot; translation_description=&quot;In the &apos;Backup&apos; settings, after pressing the &apos;Backup now&apos; option, the       progress message telling the user that it is writing all data and settings to the SD card.&quot;>    Zapisuje dane i ustawienia aplikacji ...&lt;/string>"
        errorLine2="                                                                                                                                                                                                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/backup.xml"
            line="21"
            column="252"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="    &lt;string name=&quot;sd_card_save_progress_message&quot; translation_description=&quot;When saving to the SD card, the progress message.&quot;>    Saving to SD card...&lt;/string>"
        errorLine2="                                                                                                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="24"
            column="130"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;settings_backup_restore_progress_message&quot; translation_description=&quot;In the &apos;Backup&apos; settings, after pressing the &apos;Restore now&apos; option, the       progress message informing that My Billinbg Buddy is reading all data and settings from the backup       on the SD card.&quot;>    Lecture des données et des paramètres...&lt;/string>"
        errorLine2="                                                                                                                                                                                                                                                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-fr/backup.xml"
            line="25"
            column="287"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;settings_backup_restore_progress_message&quot; translation_description=&quot;In the &apos;Backup&apos; settings, after pressing the &apos;Restore now&apos; option, the       progress message informing that My Billinbg Buddy is reading all data and settings from the backup       on the SD card.&quot;>    Odczyt danych i ustawień aplikacji...&lt;/string>"
        errorLine2="                                                                                                                                                                                                                                                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/backup.xml"
            line="28"
            column="287"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="      progress message telling the user that it is writing all data and settings to the SD card.&quot;>    Writing all data and settings...&lt;/string>"
        errorLine2="                                                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="35"
            column="103"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="      on the SD card.&quot;>    Reading all data and settings...&lt;/string>"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values/backup.xml"
            line="53"
            column="28"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;epg_no_items&quot;>Nessun risultato trovato...&lt;/string>"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="59"
            column="31"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;epg_client_errors&quot;>Si è verificato un errore, verifica il registro...&lt;/string>"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="60"
            column="36"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;main_menu_goto_title&quot;>Passa a...&lt;/string>"
        errorLine2="                                      ~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="125"
            column="39"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;main_menu_goto_title&quot;>Перемкнутися до...&lt;/string>"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="125"
            column="39"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_connect&quot;>Łączę ...&lt;/string>"
        errorLine2="                                  ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="263"
            column="35"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_connect&quot;>Підключення...&lt;/string>"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="264"
            column="35"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_connect&quot;>Connessione...&lt;/string>"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="266"
            column="35"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timers_loading&quot;>Ładowanie listy timerów...&lt;/string>"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="269"
            column="42"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_recordings_loading&quot;>Ładowanie listy nagrań...&lt;/string>"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-pl/strings.xml"
            line="270"
            column="46"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_whatson_loading&quot;>Caricamento EPG...&lt;/string>"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="271"
            column="43"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timers_loading&quot;>Caricamento timer...&lt;/string>"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="272"
            column="42"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_recordings_loading&quot;>Caricamento registrazioni...&lt;/string>"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="273"
            column="46"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_switching&quot;>Cambio...&lt;/string>"
        errorLine2="                                    ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="274"
            column="37"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_channels_loading&quot;>Caricamento canali...&lt;/string>"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="275"
            column="44"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_loading&quot;>Caricamento...&lt;/string>"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="276"
            column="35"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_disconnect&quot;>Disconnessione...&lt;/string>"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="277"
            column="38"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_wakeup_sending&quot;>Inizio richiesta accensione...&lt;/string>"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="278"
            column="42"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timer_save&quot;>Збереження таймера...&lt;/string>"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="279"
            column="38"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timer_delete&quot;>Вилучення таймера...&lt;/string>"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="280"
            column="40"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timer_save&quot;>Salvataggio timer...&lt;/string>"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="281"
            column="38"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_recording_delete&quot;>Вилучення запису...&lt;/string>"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="281"
            column="44"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timer_delete&quot;>Rimozione timer...&lt;/string>"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="282"
            column="40"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timer_enable&quot;>Включення таймера...&lt;/string>"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="282"
            column="40"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_recording_delete&quot;>Eliminazione registrazione...&lt;/string>"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="283"
            column="44"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timer_modify&quot;>Оновлення таймера...&lt;/string>"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="283"
            column="40"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timer_enable&quot;>Attivazione timer...&lt;/string>"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="284"
            column="40"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timer_disable&quot;>Відключення таймера...&lt;/string>"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="284"
            column="41"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timer_modify&quot;>Aggiornamento timer...&lt;/string>"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="285"
            column="40"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;progress_timer_disable&quot;>Disattivazione timer...&lt;/string>"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="286"
            column="41"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;recent_channels_no_history&quot;>Немає історії...&lt;/string>"
        errorLine2="                                            ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-uk/strings.xml"
            line="291"
            column="45"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;recent_channels_no_history&quot;>Nessuna cronologia...&lt;/string>"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="293"
            column="45"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;processing&quot;>Elaborazione...&lt;/string>"
        errorLine2="                            ~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="334"
            column="29"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;no_results&quot;>Nessun risultato...&lt;/string>"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/values-it/strings.xml"
            line="380"
            column="29"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_btn_round_minus.png` icon has identical contents in the following configuration folders: drawable-hdpi, drawable"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_btn_round_minus.png"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi/ic_btn_round_minus.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_btn_round_plus.png` icon has identical contents in the following configuration folders: drawable-hdpi, drawable"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_btn_round_plus.png"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi/ic_btn_round_plus.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_drive.png` icon has identical contents in the following configuration folders: drawable-mdpi, drawable"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_drive.png"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi/ic_drive.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_menu_3d_globe.png` icon has identical contents in the following configuration folders: drawable-mdpi, drawable"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_3d_globe.png"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi/ic_menu_3d_globe.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_menu_filter.png` icon has identical contents in the following configuration folders: drawable-hdpi, drawable"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_filter.png"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi/ic_menu_filter.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_menu_play_clip.png` icon has identical contents in the following configuration folders: drawable-hdpi, drawable"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_play_clip.png"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi/ic_menu_play_clip.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The `ic_volume_small.png` icon has identical contents in the following configuration folders: drawable-mdpi, drawable"
        category="Usability:Icons"
        priority="5"
        summary="Identical bitmaps across various configurations"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_volume_small.png"/>
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi/ic_volume_small.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/app_logo.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/app_logo.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/btn_channels.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_channels.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/btn_clock.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_clock.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/btn_epglist.jpg` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_epglist.jpg"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/btn_recordings.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_recordings.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/btn_remote.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_remote.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/btn_search.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_search.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/btn_search_times.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_search_times.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/btn_timer.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_timer.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/btn_wakeup.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/btn_wakeup.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/folder.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/folder.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_btn_round_minus.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_btn_round_minus.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_btn_round_plus.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_btn_round_plus.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_drive.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_drive.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_menu_3d_globe.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_3d_globe.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_menu_back.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_back.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_menu_filter.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_filter.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_menu_forward.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_forward.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_menu_play_clip.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_play_clip.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_menu_refresh.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_refresh.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_menu_revert.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_menu_revert.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_video_small.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_video_small.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ic_volume_small.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/ic_volume_small.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/icon.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/icon.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/imdb.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/imdb.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/left.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/left.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/newrecording.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/newrecording.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/omdb.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/omdb.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/right.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/right.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/sad.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/sad.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/schere.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/schere.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_active.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_active.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_active_begin.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_active_begin.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_active_conflict.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_active_conflict.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_active_end.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_active_end.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_inactive.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_inactive.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_inactive_begin.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_inactive_begin.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_inactive_end.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_inactive_end.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_none.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_none.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_recording.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_recording.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_recording_begin.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_recording_begin.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_recording_conflict.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_recording_conflict.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_recording_end.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_recording_end.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/timer_vps.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/timer_vps.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/tmdb.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/tmdb.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/tv.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/tv.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/vdr_logo.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable/vdr_logo.png"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-hdpi`: ic_menu_video.png, ic_video_small.png"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see https://developer.android.com/about/dashboards"
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-hdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-mdpi`: btn_channels.png, btn_epglist.png, btn_recordings.png, btn_remote.png, btn_search.png... (2 more)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see https://developer.android.com/about/dashboards"
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-mdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-xhdpi`: btn_channels.png, btn_epglist.png, btn_recordings.png, btn_remote.png, btn_search.png... (6 more)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see https://developer.android.com/about/dashboards"
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/drawable-xhdpi"/>
    </issue>

    <issue
        id="IconMissingDensityFolder"
        severity="Warning"
        message="Missing density variation folders in `src/main/res`: drawable-xxhdpi"
        category="Usability:Icons"
        priority="3"
        summary="Missing density folder"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as `drawable-hdpi`.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see https://developer.android.com/about/dashboards"
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="    &lt;Button"
        errorLine2="     ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="145"
            column="6"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1=" &lt;Button"
        errorLine2="  ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="151"
            column="3"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="    &lt;Button"
        errorLine2="     ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="159"
            column="6"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/vdrmanager.xml"
            line="24"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="  &lt;Button"
        errorLine2="   ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="24"
            column="4"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/vdrmanager.xml"
            line="34"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="  &lt;Button"
        errorLine2="   ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="34"
            column="4"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/vdrmanager.xml"
            line="46"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="  &lt;Button"
        errorLine2="   ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="52"
            column="4"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="  &lt;Button"
        errorLine2="   ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="63"
            column="4"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="    &lt;Button"
        errorLine2="     ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/vdrmanager.xml"
            line="66"
            column="6"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/vdrmanager.xml"
            line="79"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="  &lt;Button"
        errorLine2="   ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="82"
            column="4"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/vdrmanager.xml"
            line="92"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://d.android.com/r/studio-ui/designer/material/dialogs"
        urls="https://d.android.com/r/studio-ui/designer/material/dialogs"
        errorLine1="  &lt;Button"
        errorLine2="   ~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="95"
            column="4"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/dialog_dropdown.xml"
            line="11"
            column="6"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="        &lt;EditText"
        errorLine2="         ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/edit_remote_key.xml"
            line="20"
            column="10"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_search.xml"
            line="14"
            column="6"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/fetch_preference.xml"
            line="8"
            column="6"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="27"
            column="9"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="40"
            column="9"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="          &lt;EditText"
        errorLine2="           ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="               &lt;EditText"
        errorLine2="                ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="62"
            column="17"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="        &lt;EditText"
        errorLine2="         ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="76"
            column="10"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="37"
            column="9"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="      &lt;EditText android:layout_height=&quot;wrap_content&quot; android:numeric=&quot;integer&quot; android:id=&quot;@+id/timer_detail_priority&quot;  android:layout_width=&quot;wrap_content&quot; android:hint=&quot;@string/timer_detail_priority&quot;/>"
        errorLine2="       ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="125"
            column="8"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="      &lt;EditText android:layout_height=&quot;wrap_content&quot;  android:numeric=&quot;integer&quot; android:id=&quot;@+id/timer_detail_lifetime&quot;  android:layout_width=&quot;wrap_content&quot; android:hint=&quot;@string/timer_detail_lifetime_hint&quot;/>"
        errorLine2="       ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="134"
            column="8"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than `11sp`: `2sp`"
        category="Usability"
        priority="4"
        summary="Text size is too small"
        explanation="Avoid using sizes smaller than 11sp."
        errorLine1="        android:layout_height=&quot;2sp&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="79"
            column="9"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than `11sp`: `1sp`"
        category="Usability"
        priority="4"
        summary="Text size is too small"
        explanation="Avoid using sizes smaller than 11sp."
        errorLine1="        android:layout_height=&quot;1sp&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="141"
            column="9"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than `11sp`: `4sp`"
        category="Usability"
        priority="4"
        summary="Text size is too small"
        explanation="Avoid using sizes smaller than 11sp."
        errorLine1="        android:layout_height=&quot;4sp&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="146"
            column="9"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than `11sp`: `10sp`"
        category="Usability"
        priority="4"
        summary="Text size is too small"
        explanation="Avoid using sizes smaller than 11sp."
        errorLine1="            android:textSize=&quot;10sp&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than `11sp`: `10sp`"
        category="Usability"
        priority="4"
        summary="Text size is too small"
        explanation="Avoid using sizes smaller than 11sp."
        errorLine1="            android:textSize=&quot;10sp&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than `11sp`: `10sp`"
        category="Usability"
        priority="4"
        summary="Text size is too small"
        explanation="Avoid using sizes smaller than 11sp."
        errorLine1="        android:textSize=&quot;10sp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="            &lt;EditText"
        errorLine2="             ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="42"
            column="14"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="        &lt;EditText"
        errorLine2="         ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list_fragment.xml"
            line="13"
            column="10"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/dialog_dropdown.xml"
            line="11"
            column="6"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="        &lt;EditText"
        errorLine2="         ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/edit_remote_key.xml"
            line="20"
            column="10"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_search.xml"
            line="14"
            column="6"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/fetch_preference.xml"
            line="8"
            column="6"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="27"
            column="9"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="40"
            column="9"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="          &lt;EditText"
        errorLine2="           ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="               &lt;EditText"
        errorLine2="                ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="62"
            column="17"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="        &lt;EditText"
        errorLine2="         ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="76"
            column="10"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="37"
            column="9"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="      &lt;EditText android:layout_height=&quot;wrap_content&quot; android:numeric=&quot;integer&quot; android:id=&quot;@+id/timer_detail_priority&quot;  android:layout_width=&quot;wrap_content&quot; android:hint=&quot;@string/timer_detail_priority&quot;/>"
        errorLine2="       ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="125"
            column="8"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="      &lt;EditText android:layout_height=&quot;wrap_content&quot;  android:numeric=&quot;integer&quot; android:id=&quot;@+id/timer_detail_lifetime&quot;  android:layout_width=&quot;wrap_content&quot; android:hint=&quot;@string/timer_detail_lifetime_hint&quot;/>"
        errorLine2="       ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="134"
            column="8"/>
    </issue>

    <issue
        id="ViewConstructor"
        severity="Warning"
        message="Custom view `ColorPickerView` is missing constructor used by tools: `(Context)` or `(Context,AttributeSet)` or `(Context,AttributeSet,int)`"
        category="Usability"
        priority="3"
        summary="Missing View constructors for XML inflation"
        explanation="Some layout tools (such as the Android layout editor) need to find a constructor with one of the following signatures:&#xA;* `View(Context context)`&#xA;* `View(Context context, AttributeSet attrs)`&#xA;* `View(Context context, AttributeSet attrs, int defStyle)`&#xA;&#xA;If your custom view needs to perform initialization which does not apply when used in a layout editor, you can surround the given code with a check to see if `View#isInEditMode()` is false, since that method will return `false` at runtime but true within a user interface editor."
        errorLine1="class ColorPickerView extends View {"
        errorLine2="      ~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerView.java"
            line="34"
            column="7"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `CirclePageIndicator` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/com/viewpagerindicator/CirclePageIndicator.java"
            line="233"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `ColorPickerView` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="        public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                       ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerDialog.java"
            line="178"
            column="24"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `ColorPickerView` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="  public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                 ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerPreference.java"
            line="221"
            column="18"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `ColorPickerView` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerView.java"
            line="135"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `SearchableSpinner` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/com/rajasharan/widget/SearchableSpinner.java"
            line="157"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `TitlePageIndicator` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/com/viewpagerindicator/TitlePageIndicator.java"
            line="418"
            column="20"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="     &lt;ImageView"
        errorLine2="      ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_item.xml"
            line="16"
            column="7"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="85"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="            &lt;ImageView"
        errorLine2="             ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list_fragment.xml"
            line="56"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="        &lt;ImageView"
        errorLine2="         ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="58"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="115"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="            &lt;ImageButton"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="159"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="            &lt;ImageButton"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="171"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="            &lt;ImageButton"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="181"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="            &lt;ImageButton"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="191"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="            &lt;ImageButton"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="201"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="  &lt;ImageView android:id=&quot;@+id/timer_item_state&quot; android:layout_marginRight=&quot;3dip&quot; android:src=&quot;@drawable/newrecording&quot;"
        errorLine2="   ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="38"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="  &lt;ImageView android:id=&quot;@+id/timer_item_other&quot; android:layout_marginRight=&quot;3dip&quot; android:src=&quot;@drawable/schere&quot;"
        errorLine2="   ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="42"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="34"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="66"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="99"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageButton"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/fetch_preference.xml"
            line="15"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/folder_item.xml"
            line="8"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="        &lt;ImageView"
        errorLine2="         ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/no_connection.xml"
            line="20"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="   &lt;ImageView android:src=&quot;@drawable/sad&quot;"
        errorLine2="    ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/search_epg_list.xml"
            line="36"
            column="5"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="32"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="51"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="98"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_list.xml"
            line="47"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageView android:id=&quot;@+id/main_logo&quot; android:layout_width=&quot;fill_parent&quot;"
        errorLine2="     ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/vdrmanager.xml"
            line="13"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1=" &lt;ImageView android:id=&quot;@+id/main_logo&quot; android:layout_width=&quot;fill_parent&quot;"
        errorLine2="  ~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="13"
            column="3"/>
    </issue>

    <issue
        id="KeyboardInaccessibleWidget"
        severity="Warning"
        message="&apos;clickable&apos; attribute found, please also add &apos;focusable&apos;"
        category="Accessibility"
        priority="3"
        summary="Keyboard inaccessible widget"
        explanation="A widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the `focusable` attribute as well."
        errorLine1="        android:clickable=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/edit_remote_key.xml"
            line="12"
            column="9"/>
    </issue>

    <issue
        id="KeyboardInaccessibleWidget"
        severity="Warning"
        message="&apos;clickable&apos; attribute found, please also add &apos;focusable&apos;"
        category="Accessibility"
        priority="3"
        summary="Keyboard inaccessible widget"
        explanation="A widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the `focusable` attribute as well."
        errorLine1="                    android:clickable=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="42"
            column="21"/>
    </issue>

    <issue
        id="KeyboardInaccessibleWidget"
        severity="Warning"
        message="&apos;clickable&apos; attribute found, please also add &apos;focusable&apos;"
        category="Accessibility"
        priority="3"
        summary="Keyboard inaccessible widget"
        explanation="A widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the `focusable` attribute as well."
        errorLine1="                    android:clickable=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="40"
            column="21"/>
    </issue>

    <issue
        id="KeyboardInaccessibleWidget"
        severity="Warning"
        message="&apos;clickable&apos; attribute found, please also add &apos;focusable&apos;"
        category="Accessibility"
        priority="3"
        summary="Keyboard inaccessible widget"
        explanation="A widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the `focusable` attribute as well."
        errorLine1="                    android:clickable=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/time_epg_list.xml"
            line="59"
            column="21"/>
    </issue>

    <issue
        id="KeyboardInaccessibleWidget"
        severity="Warning"
        message="&apos;clickable&apos; attribute found, please also add &apos;focusable&apos;"
        category="Accessibility"
        priority="3"
        summary="Keyboard inaccessible widget"
        explanation="A widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the `focusable` attribute as well."
        errorLine1="        android:clickable=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/vdrmanager.xml"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="KeyboardInaccessibleWidget"
        severity="Warning"
        message="&apos;clickable&apos; attribute found, please also add &apos;focusable&apos;"
        category="Accessibility"
        priority="3"
        summary="Keyboard inaccessible widget"
        explanation="A widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the `focusable` attribute as well."
        errorLine1="  android:clickable=&quot;true&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrmanager.xml"
            line="14"
            column="3"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/dialog_dropdown.xml"
            line="11"
            column="6"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="        &lt;EditText"
        errorLine2="         ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/edit_remote_key.xml"
            line="20"
            column="10"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_search.xml"
            line="14"
            column="6"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/fetch_preference.xml"
            line="8"
            column="6"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="27"
            column="9"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="40"
            column="9"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="          &lt;EditText"
        errorLine2="           ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="               &lt;EditText"
        errorLine2="                ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="62"
            column="17"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="        &lt;EditText"
        errorLine2="         ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_detail.xml"
            line="76"
            column="10"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="       &lt;EditText"
        errorLine2="        ~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="37"
            column="9"/>
    </issue>

    <issue
        id="ConstantLocale"
        severity="Warning"
        message="Assigning `Locale.getDefault()` to a final static field is suspicious; this code will not work correctly if the user changes locale while the app is running"
        category="Internationalization"
        priority="6"
        summary="Constant Locale"
        explanation="Assigning `Locale.getDefault()` to a constant is suspicious, because the locale can change while the app is running."
        errorLine1="  public static final Locale SYSTEM_LOCALE = Locale.getDefault();"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/app/VdrManagerApp.java"
            line="36"
            column="46"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="String literal in `setText` can not be translated. Use Android resources instead."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="https://developer.android.com/guide/topics/resources/localization.html"
        urls="https://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="  tv.setText(&quot;Pick a Color&quot;);"
        errorLine2="             ~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/colorpicker/ColorPickerPreference.java"
            line="535"
            column="14"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="https://developer.android.com/guide/topics/resources/localization.html"
        urls="https://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="        ((TextView) view.findViewById(R.id.epg_detail_time)).setText(formatter"
        errorLine2="                                                                     ^">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/EpgDetailsActivity.java"
            line="313"
            column="70"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="https://developer.android.com/guide/topics/resources/localization.html"
        urls="https://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="        binding.timerDetailChannel.setText(timer.getChannelNumber() + &quot; &quot; + timer.getChannelName());"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/java/de/bjusystems/vdrmanager/ng/gui/TimerDetailsActivity.java"
            line="169"
            column="44"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Empty set&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Empty set&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list.xml"
            line="64"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Empty set&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Empty set&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/channel_list_fragment.xml"
            line="35"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Channel&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="   android:text=&quot;Channel&quot; android:gravity=&quot;center_vertical|left&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/child_layout.xml"
            line="10"
            column="4"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;23&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="   android:layout_height=&quot;40dip&quot; android:layout_weight=&quot;1&quot; android:text=&quot;23&quot;"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/child_layout.xml"
            line="18"
            column="60"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf0b0;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/edit_remote_key.xml"
            line="30"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf1fc;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/edit_remote_key.xml"
            line="37"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Unterwegs nach Cold Mountain&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Unterwegs nach Cold Mountain&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="12"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;20:10-20-15&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;20:10-20-15&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;2/123min&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;2/123min&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="37"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Sky Cinema&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Sky Cinema&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="46"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Krimikömedie&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Krimikömedie&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="72"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Thriller, Comedy&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:text=&quot;Thriller, Comedy&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="133"
            column="21"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Sky Film&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="    android:layout_height=&quot;wrap_content&quot; android:text=&quot;Sky Film&quot; style=&quot;@android:style/TextAppearance.Medium&quot;/>"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="13"
            column="42"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;22:33&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="   android:gravity=&quot;left&quot; android:text=&quot;22:33&quot; android:paddingRight=&quot;5dip&quot; />"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="25"
            column="27"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;timer_item_title&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="  &lt;TextView android:id=&quot;@+id/timer_item_title&quot; android:text=&quot;timer_item_title&quot; android:layout_weight=&quot;1&quot; android:textStyle=&quot;bold&quot;"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="27"
            column="48"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;timer_short_text&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="   android:text=&quot;timer_short_text&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="47"
            column="4"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;89min&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="   android:layout_height=&quot;wrap_content&quot; android:text=&quot;89min&quot;/>"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="56"
            column="41"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;House of Cards&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;House of Cards&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/folder_item.xml"
            line="21"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;3&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;3&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/folder_item.xml"
            line="30"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Sky&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="  android:layout_height=&quot;40dip&quot; android:text=&quot;Sky&quot; android:gravity=&quot;center_vertical|left&quot;"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/group_layout.xml"
            line="6"
            column="33"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;23&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="  android:text=&quot;23&quot; android:gravity=&quot;center_vertical|right&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/group_layout.xml"
            line="12"
            column="3"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Header&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="android:text=&quot;Header&quot;"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/header_item.xml"
            line="3"
            column="1"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Back&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Back&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="57"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;XXX&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:text=&quot;XXX&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="58"
            column="21"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf085;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="73"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;OK&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;OK&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="94"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf061;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="104"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf060;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="114"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf062;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="123"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf0aa;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="133"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf028;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="143"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf063;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="155"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf0ab;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="164"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf027;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="173"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf129;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="260"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf177;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="269"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf0c9;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="279"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf0e2;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="318"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf120;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="328"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;S&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:text=&quot;S&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="370"
            column="21"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf011;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="48"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Back&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Back&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="58"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf085;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="80"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;OK&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;OK&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="101"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf061;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="108"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf060;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="118"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf062;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="128"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf0aa;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="137"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf028;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="147"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf063;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="159"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf0ab;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="168"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf027;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="177"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf04d;&amp;#xf04d;&amp;#xf04d;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="203"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf04d;&amp;#xf04d;&amp;#xf04d;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="214"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf04d;&amp;#xf04d;&amp;#xf04d;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="227"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf04d;&amp;#xf04d;&amp;#xf04d;&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="239"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf026;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="263"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf129;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="272"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf177;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="281"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf0c9;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="291"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf025;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="312"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;S&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;S&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="321"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf0e2;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="330"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;&amp;#xf120;&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="340"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;20:34&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="              android:text=&quot;20:34&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="93"
            column="15"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Empty set&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="  android:layout_height=&quot;wrap_content&quot; android:text=&quot;Empty set&quot; />"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/vdrlist.xml"
            line="10"
            column="40"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Start&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="      android:text=&quot;Start&quot;/>"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/video.xml"
            line="24"
            column="7"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="            android:paddingLeft=&quot;10dip&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingRight` you should probably also define `paddingLeft` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="   android:gravity=&quot;left&quot; android:text=&quot;22:33&quot; android:paddingRight=&quot;5dip&quot; />"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="25"
            column="48"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="        android:paddingLeft=&quot;5dip&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/folder_item.xml"
            line="18"
            column="9"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="           android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="       android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="33"
            column="8"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="       android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="49"
            column="8"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="       android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="63"
            column="8"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="       android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="86"
            column="8"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="        android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="100"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:text=&quot;Channel&quot; android:gravity=&quot;center_vertical|left&quot;"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/child_layout.xml"
            line="10"
            column="44"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;15dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:paddingLeft=&quot;15dip&quot; android:paddingRight=&quot;5dip&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/child_layout.xml"
            line="11"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingRight` with `android:paddingEnd=&quot;5dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:paddingLeft=&quot;15dip&quot; android:paddingRight=&quot;5dip&quot;"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/child_layout.xml"
            line="11"
            column="32"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:gravity=&quot;center_vertical|right&quot; android:ellipsize=&quot;end&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/child_layout.xml"
            line="19"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;5dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginRight=&quot;5dip&quot; android:textColor=&quot;#BDBDBD&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/child_layout.xml"
            line="20"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:gravity=&quot;left&quot;"
        errorLine2="                             ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="26"
            column="30"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:gravity=&quot;right&quot;"
        errorLine2="                             ~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="35"
            column="30"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;10dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:paddingLeft=&quot;10dip&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:gravity=&quot;right&quot;"
        errorLine2="                             ~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="45"
            column="30"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;5dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginRight=&quot;5dip&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="63"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:gravity=&quot;left&quot;"
        errorLine2="                             ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="71"
            column="30"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;5dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:layout_marginLeft=&quot;5dp&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_detail.xml"
            line="125"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingRight` with `android:paddingEnd=&quot;5dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:gravity=&quot;left&quot; android:text=&quot;22:33&quot; android:paddingRight=&quot;5dip&quot; />"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="25"
            column="48"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:gravity=&quot;left&quot; android:text=&quot;22:33&quot; android:paddingRight=&quot;5dip&quot; />"
        errorLine2="                    ~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="25"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;3dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  &lt;ImageView android:id=&quot;@+id/timer_item_state&quot; android:layout_marginRight=&quot;3dip&quot; android:src=&quot;@drawable/newrecording&quot;"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="38"
            column="49"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;3dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  &lt;ImageView android:id=&quot;@+id/timer_item_other&quot; android:layout_marginRight=&quot;3dip&quot; android:src=&quot;@drawable/schere&quot;"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="42"
            column="49"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:ellipsize=&quot;end&quot; android:layout_width=&quot;wrap_content&quot; android:gravity=&quot;right&quot;  android:textSize=&quot;13dip&quot;"
        errorLine2="                                                                                ~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/epg_event_item.xml"
            line="55"
            column="81"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="22"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;5dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:layout_marginLeft=&quot;5dp&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/event_epg_list.xml"
            line="76"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;5dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:paddingLeft=&quot;5dip&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/folder_item.xml"
            line="18"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_height=&quot;40dip&quot; android:text=&quot;Sky&quot; android:gravity=&quot;center_vertical|left&quot;"
        errorLine2="                                                                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/group_layout.xml"
            line="6"
            column="69"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;35dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:paddingLeft=&quot;35dip&quot; android:paddingRight=&quot;5dip&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/group_layout.xml"
            line="7"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingRight` with `android:paddingEnd=&quot;5dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:paddingLeft=&quot;35dip&quot; android:paddingRight=&quot;5dip&quot;"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/group_layout.xml"
            line="7"
            column="31"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:text=&quot;23&quot; android:gravity=&quot;center_vertical|right&quot;"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/group_layout.xml"
            line="12"
            column="38"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;5dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_marginRight=&quot;5dip&quot; android:textColor=&quot;#BDBDBD&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/group_layout.xml"
            line="13"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_list.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:drawableLeft` with `android:drawableStart=&quot;@drawable/ic_drive&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:drawableLeft=&quot;@drawable/ic_drive&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/recording_list.xml"
            line="66"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:gravity=&quot;right&quot;"
        errorLine2="                             ~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="24"
            column="30"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:gravity=&quot;right&quot;"
        errorLine2="                             ~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="24"
            column="30"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="34"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="46"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="83"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toLeftOf`; already defining `layout_toStartOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toLeftOf=&quot;@+id/right&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="91"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="92"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toLeftOf`; already defining `layout_toStartOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:layout_toLeftOf=&quot;@+id/right&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="100"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toRightOf`; already defining `layout_toEndOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toRightOf=&quot;@+id/up&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="102"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toLeftOf`; already defining `layout_toStartOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toLeftOf=&quot;@+id/ok&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="111"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toRightOf`; already defining `layout_toEndOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:layout_toRightOf=&quot;@+id/up&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="111"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toLeftOf`; already defining `layout_toStartOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:layout_toLeftOf=&quot;@+id/ok&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="120"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="130"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="139"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="139"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="148"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toLeftOf`; already defining `layout_toStartOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toLeftOf=&quot;@+id/right&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="152"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toLeftOf`; already defining `layout_toStartOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:layout_toLeftOf=&quot;@+id/right&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="161"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="162"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="170"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="171"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="179"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="183"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="192"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/remote.xml"
            line="240"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote.xml"
            line="249"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:gravity=&quot;right&quot; />"
        errorLine2="                         ~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="26"
            column="26"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="36"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="88"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toLeftOf`; already defining `layout_toStartOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toLeftOf=&quot;@+id/right&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="98"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toRightOf`; already defining `layout_toEndOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toRightOf=&quot;@+id/up&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="110"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toLeftOf`; already defining `layout_toStartOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toLeftOf=&quot;@+id/ok&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="120"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="139"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="149"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_toLeftOf`; already defining `layout_toStartOf` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toLeftOf=&quot;@+id/right&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="161"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="170"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="179"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentRight`; already defining `layout_alignParentEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="191"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `layout_alignParentLeft`; already defining `layout_alignParentStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout-land/remote_test.xml"
            line="251"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `paddingLeft`; already defining `paddingStart` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:paddingLeft=&quot;?android:attr/listPreferredItemPaddingLeft&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/simple_list_item_1_fa.xml"
            line="26"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Redundant attribute `paddingRight`; already defining `paddingEnd` with `targetSdkVersion` 34"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:paddingRight=&quot;?android:attr/listPreferredItemPaddingRight&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/simple_list_item_1_fa.xml"
            line="27"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;4.0dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="           android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;4.0dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="       android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="33"
            column="8"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;4.0dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="       android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="49"
            column="8"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;4.0dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="       android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="63"
            column="8"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;4.0dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="       android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="86"
            column="8"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;4.0dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:paddingLeft=&quot;4.0dip&quot; android:paddingBottom=&quot;2.0dip&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;2.0dip&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/res/layout/timer_detail.xml"
            line="100"
            column="9"/>
    </issue>

    <issue
        id="RtlEnabled"
        severity="Warning"
        message="The project references RTL attributes, but does not explicitly enable or disable RTL support with `android:supportsRtl` in the manifest"
        category="Internationalization:Bidirectional Text"
        priority="3"
        summary="Using RTL attributes without enabling RTL support"
        explanation="To enable right-to-left support, when running on API 17 and higher, you must set the `android:supportsRtl` attribute in the manifest `&lt;application>` element.&#xA;&#xA;If you have started adding RTL attributes, but have not yet finished the migration, you can set the attribute to false to satisfy this lint check.">
        <location
            file="/home/rl/Android_prj/A_2025/vdrmanager-ng/de.bjusystems.vdrmanager/src/main/AndroidManifest.xml"/>
    </issue>

</issues>
